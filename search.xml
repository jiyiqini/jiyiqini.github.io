<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>常见的 Hexo 报错与解决</title>
    <url>/dev-tools/hexo/Hexo-Issues/</url>
    <content><![CDATA[<p>hexo 使用过程中，经常遇到一些稀奇古怪的问题。经查阅后解决，现将这些常见的错误与处理策略一一记录。</p>
<a id="more"></a>

<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul>
<li><a href="https://leunggeorge.github.io/2017/07/09/执行hexo时的一些报错处理/" target="_blank" rel="noopener">执行hexo时的一些报错处理</a></li>
</ul>
]]></content>
      <categories>
        <category>技术篇</category>
        <category>工具指南</category>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>报错</tag>
        <tag>异常</tag>
      </tags>
  </entry>
  <entry>
    <title>如何美化 hexo+next 个人博客？(入门篇2)</title>
    <url>/dev-tools/hexo/How-To-Config/</url>
    <content><![CDATA[<p>Hexo博客搭建成功后，其实我们就已经可以愉快地进行写文章了。但是，由于个人喜好，我们可能需要自定义设置一下创建的博客系统。这样，既也助于我们有更好的心情去编写文章，又能吸引更多访客的阅读。So，我们来看看如何进行常见的个性化设置吧？</p>
<a id="more"></a>

<!-- [toc] -->

<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>初始创建好的 <code>Hexo+next</code> 基本可以用，也简洁。但是，我们还是有需要进一步美化一下。</p>
<p>无非就是主题与排版，围绕的核心配置文件不外乎：</p>
<blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">../&#123;your_hexo_blog&#125;</span><br><span class="line">   ├────────_config.yml <span class="comment">#全局配置</span></span><br><span class="line">   ├────────themes/hexo-theme-next/_config.yml <span class="comment">#next主题配置：后面的大多数都在这里配置</span></span><br></pre></td></tr></table></figure>
</blockquote>
<p>现在，就按我自己的喜好做如下个性化配置吧！（例如：<a href="https://jiyiqini.github.io" target="_blank" rel="noopener">我的个人博客</a>）</p>
<p><em>PS: 本文是基于 Hexo+next 讲解的。</em></p>
<h1 id="新增网站头信息（Site）"><a href="#新增网站头信息（Site）" class="headerlink" title="新增网站头信息（Site）"></a>新增网站头信息（Site）</h1><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 位于 ../&lt;your_hexo_blog&gt;/_config.yml#Site：</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">博客标题。例如：“我的学习之旅”</span></span><br><span class="line"><span class="attr">subtitle:</span> <span class="string">'博客副标题，用于简单描述。'</span></span><br><span class="line"><span class="attr">description:</span> <span class="string">'作者个人描述，例如一个座右铭：好好学习，天天向上。'</span></span><br><span class="line"><span class="attr">keywords:</span> <span class="string">关键字</span> <span class="comment">#默认为空</span></span><br><span class="line"><span class="attr">author:</span> <span class="string">作者名称</span></span><br><span class="line"><span class="attr">language:</span> <span class="string">博客语言类型。#例如：zh-CN</span></span><br><span class="line"><span class="attr">timezone:</span> <span class="string">'时区'</span> <span class="comment">#默认为空，表示当前用户所在时区</span></span><br></pre></td></tr></table></figure>

<h1 id="配置“关于-分类-标签-搜索-404”等常见入口"><a href="#配置“关于-分类-标签-搜索-404”等常见入口" class="headerlink" title="配置“关于/分类/标签/搜索/404”等常见入口"></a>配置“关于/分类/标签/搜索/404”等常见入口</h1><blockquote>
<p>基本步骤：  </p>
<ol>
<li><code>hexo new page xxx</code> –&gt; 编辑对应的 <code>index.md</code> 内容  </li>
<li><code>../themes/theme-hexo-next/_config.yml$menu</code> 中开启：  <figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># Menu Settings</span></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Usage: `Key: /link/ || icon`</span></span><br><span class="line"><span class="comment"># Key is the name of menu item. If the translation for this item is available, the translated text will be loaded, otherwise the Key name will be used. Key is case-senstive.</span></span><br><span class="line"><span class="comment"># Value before `||` delimiter is the target link, value after `||` delimiter is the name of Font Awesome icon.</span></span><br><span class="line"><span class="comment"># When running the site in a subdirectory (e.g. yoursite.com/blog), remove the leading slash from link value (/archives -&gt; archives).</span></span><br><span class="line"><span class="comment"># External url should start with http:// or https://</span></span><br><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="attr">home:</span> <span class="string">/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-home</span></span><br><span class="line">  <span class="attr">about:</span> <span class="string">/about/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-user</span></span><br><span class="line">  <span class="attr">tags:</span> <span class="string">/tags/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-tags</span></span><br><span class="line">  <span class="attr">categories:</span> <span class="string">/categories/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-th</span></span><br><span class="line">  <span class="attr">archives:</span> <span class="string">/archives/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-archive</span></span><br><span class="line">  <span class="comment">#schedule: /schedule/ || fa fa-calendar</span></span><br><span class="line">  <span class="comment">#sitemap: /sitemap.xml || fa fa-sitemap</span></span><br><span class="line">  <span class="comment">#commonweal: /404/ || fa fa-heartbeat</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Enable / Disable menu icons / item badges.</span></span><br><span class="line"><span class="attr">menu_settings:</span></span><br><span class="line">  <span class="attr">icons:</span> <span class="literal">true</span>     <span class="comment">#是否启用图标</span></span><br><span class="line">  <span class="attr">badges:</span> <span class="literal">true</span>    <span class="comment">#是否显示角标数（栏目下文章数目）</span></span><br></pre></td></tr></table></figure>
</li>
</ol>
</blockquote>
<ol>
<li><p><strong>关于：</strong></p>
 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 创建 about</span></span><br><span class="line">$ hexo new page about</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编辑内容（../source/about/index.md）</span></span><br><span class="line">---</span><br><span class="line">title: 关于介绍              <span class="comment">#当前页标题</span></span><br><span class="line">date: 2020-05-16 18:04:21   <span class="comment">#当前文件创建时间</span></span><br><span class="line">comments: <span class="literal">false</span>             <span class="comment">#禁用评论</span></span><br><span class="line">---</span><br><span class="line">...更多详细介绍，根据markdown语法编写即可...</span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>分类：</strong></p>
 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 创建 categories</span></span><br><span class="line">$ hexo new page categories</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编辑内容（../source/categories/index.md）</span></span><br><span class="line">---</span><br><span class="line">title: 文章分类              <span class="comment">#当前页标题</span></span><br><span class="line">date: 2020-05-16 13:21:33   <span class="comment">#当前文件创建时间</span></span><br><span class="line">categories: Testing         <span class="comment">#分类名</span></span><br><span class="line"><span class="built_in">type</span>: <span class="string">"categories"</span>          <span class="comment">#设置页面类型</span></span><br><span class="line">comments: <span class="literal">false</span>             <span class="comment">#禁止评论</span></span><br><span class="line">---</span><br><span class="line">...更多详细介绍，根据markdown语法编写即可...</span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>标签：</strong></p>
 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 创建 tags</span></span><br><span class="line">$ hexo new page tags</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编辑内容（../source/tags/index.md）</span></span><br><span class="line">---</span><br><span class="line">title: 文章分类              <span class="comment">#当前页标题</span></span><br><span class="line">date: 2020-05-16 13:21:07   <span class="comment">#当前文件创建时间</span></span><br><span class="line"><span class="built_in">type</span>: <span class="string">"tags"</span>                <span class="comment">#设置页面类型</span></span><br><span class="line">comments: <span class="literal">false</span>             <span class="comment">#禁止评论</span></span><br><span class="line">---</span><br><span class="line">...更多详细介绍，根据markdown语法编写即可...</span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>404：</strong></p>
 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 创建 404</span></span><br><span class="line">$ hexo new page 404</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编辑内容（../source/404/index.md）</span></span><br><span class="line">---</span><br><span class="line">title: 404                  <span class="comment">#404 Not Found：该页无法显示</span></span><br><span class="line">date: 2020-05-16 14:11:34   <span class="comment">#当前文件创建时间</span></span><br><span class="line">comments: <span class="literal">false</span>             <span class="comment">#禁止评论</span></span><br><span class="line">permalink: /404</span><br><span class="line"><span class="built_in">type</span>: <span class="string">"404"</span></span><br><span class="line">layout: <span class="string">"404"</span></span><br><span class="line">---</span><br><span class="line">...更多详细介绍，根据markdown语法编写即可...</span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>搜索：</strong></p>
 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># hexo 站点目录下执行安装命令：</span></span><br><span class="line">$ npm install hexo-generator-searchdb</span><br><span class="line"></span><br><span class="line"><span class="comment">#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#</span></span><br><span class="line"><span class="comment"># 编辑global配置（../&lt;your_hexo_blog&gt;/_config.yml#search）</span></span><br><span class="line"><span class="comment">#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#</span></span><br><span class="line"><span class="comment"># Search</span></span><br><span class="line">search:</span><br><span class="line">  path: search.xml    <span class="comment">#索引文件的路径，相对于站点根目录</span></span><br><span class="line">  field: post         <span class="comment">#搜索范围，默认是 post，还可以选择 page、all，设置成 all 表示搜索所有页面</span></span><br><span class="line">  content: <span class="literal">true</span></span><br><span class="line">  format: html</span><br><span class="line">  <span class="built_in">limit</span>: 10000        <span class="comment">#限制搜索的条目数</span></span><br></pre></td></tr></table></figure>

</li>
</ol>
<h1 id="配置字体"><a href="#配置字体" class="headerlink" title="配置字体"></a>配置字体</h1><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment">#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#</span></span><br><span class="line"><span class="comment"># 编辑global配置（../&lt;your_hexo_blog&gt;/_config.yml#Font-Settings），若没有则添加。</span></span><br><span class="line"><span class="comment">#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Font-Settings</span></span><br><span class="line"><span class="attr">font:</span></span><br><span class="line">  <span class="comment"># Use custom fonts families or not.</span></span><br><span class="line">  <span class="comment"># Depended options: `external` and `family`.</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Uri of fonts host, e.g. //fonts.googleapis.com (Default).</span></span><br><span class="line">  <span class="attr">host:</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Font options:</span></span><br><span class="line">  <span class="comment"># `external: true` will load this font family from `host` above.</span></span><br><span class="line">  <span class="comment"># `family: Times New Roman`. Without any quotes.</span></span><br><span class="line">  <span class="comment"># `size: x.x`. Use `em` as unit. Default: 1 (16px)</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Global font settings used for all elements inside &lt;body&gt;.</span></span><br><span class="line">  <span class="attr">global:</span></span><br><span class="line">    <span class="attr">external:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">family:</span> </span><br><span class="line">    <span class="attr">size:</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Font settings for site title (.site-title).</span></span><br><span class="line">  <span class="attr">title:</span></span><br><span class="line">    <span class="attr">external:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">family:</span></span><br><span class="line">    <span class="attr">size:</span> </span><br><span class="line"></span><br><span class="line">  <span class="comment"># Font settings for headlines (&lt;h1&gt; to &lt;h6&gt;).</span></span><br><span class="line">  <span class="attr">headings:</span></span><br><span class="line">    <span class="attr">external:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">family:</span> <span class="string">Roboto</span> <span class="string">Slab</span></span><br><span class="line">    <span class="attr">size:</span> </span><br><span class="line"></span><br><span class="line">  <span class="comment"># Font settings for posts (.post-body).</span></span><br><span class="line">  <span class="attr">posts:</span></span><br><span class="line">    <span class="attr">external:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">family:</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Font settings for &lt;code&gt; and code blocks.</span></span><br><span class="line">  <span class="attr">codes:</span></span><br><span class="line">    <span class="attr">external:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">family:</span></span><br><span class="line">    </span><br><span class="line"><span class="comment">#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#</span></span><br><span class="line"><span class="comment"># 编辑theme配置（../themes/theme-hexo-next/_config.yml#font），默认在</span></span><br><span class="line"><span class="comment"># next主题配置中也有Font Settings。</span></span><br><span class="line"><span class="comment">#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#</span></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># Font Settings</span></span><br><span class="line"><span class="comment"># See: https://theme-next.org/docs/theme-settings/#Fonts-Customization</span></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># Find fonts on Google Fonts (https://www.google.com/fonts)</span></span><br><span class="line"><span class="comment"># All fonts set here will have the following styles:</span></span><br><span class="line"><span class="comment">#   light | light italic | normal | normal italic | bold | bold italic</span></span><br><span class="line"><span class="comment"># Be aware that setting too much fonts will cause site running slowly</span></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># To avoid space between header and sidebar in scheme Pisces / Gemini, Web Safe fonts are recommended for `global` (and `title`):</span></span><br><span class="line"><span class="comment"># Arial | Tahoma | Helvetica | Times New Roman | Courier New | Verdana | Georgia | Palatino | Garamond | Comic Sans MS | Trebuchet MS</span></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="attr">font:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Uri of fonts host, e.g. https://fonts.googleapis.com (Default).</span></span><br><span class="line">  <span class="attr">host:</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Font options:</span></span><br><span class="line">  <span class="comment"># `external: true` will load this font family from `host` above.</span></span><br><span class="line">  <span class="comment"># `family: Times New Roman`. Without any quotes.</span></span><br><span class="line">  <span class="comment"># `size: x.x`. Use `em` as unit. Default: 1 (16px)</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Global font settings used for all elements inside &lt;body&gt;.</span></span><br><span class="line">  <span class="attr">global:</span></span><br><span class="line">    <span class="attr">external:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">family:</span> <span class="string">Lato</span></span><br><span class="line">    <span class="attr">size:</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Font settings for site title (.site-title).</span></span><br><span class="line">  <span class="attr">title:</span></span><br><span class="line">    <span class="attr">external:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">family:</span></span><br><span class="line">    <span class="attr">size:</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Font settings for headlines (&lt;h1&gt; to &lt;h6&gt;).</span></span><br><span class="line">  <span class="attr">headings:</span></span><br><span class="line">    <span class="attr">external:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">family:</span></span><br><span class="line">    <span class="attr">size:</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Font settings for posts (.post-body).</span></span><br><span class="line">  <span class="attr">posts:</span></span><br><span class="line">    <span class="attr">external:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">family:</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Font settings for &lt;code&gt; and code blocks.</span></span><br><span class="line">  <span class="attr">codes:</span></span><br><span class="line">    <span class="attr">external:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">family:</span></span><br></pre></td></tr></table></figure>

<h1 id="配置个人信息栏（头像、内联链接、友情链接等）"><a href="#配置个人信息栏（头像、内联链接、友情链接等）" class="headerlink" title="配置个人信息栏（头像、内联链接、友情链接等）"></a>配置个人信息栏（头像、内联链接、友情链接等）</h1><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment">#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#</span></span><br><span class="line"><span class="comment"># 1.头像。编辑theme配置（../themes/hexo-theme-next/_config.yml#avatar）</span></span><br><span class="line"><span class="comment">#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#</span></span><br><span class="line"><span class="comment"># Sidebar Avatar</span></span><br><span class="line"><span class="attr">avatar:</span></span><br><span class="line">  <span class="attr">url:</span> <span class="string">/images/avatar.jpg</span>   <span class="comment">#将个人头像图片放在 ../themes/hexo-theme-next/source/images/ 下。例如：avatar.jpg</span></span><br><span class="line">  <span class="attr">rounded:</span> <span class="literal">true</span>             <span class="comment">#头像是否显示为圆图</span></span><br><span class="line">  <span class="attr">rotated:</span> <span class="literal">true</span>             <span class="comment">#鼠标悬浮在头像上，是否启用头像旋转的特效</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#</span></span><br><span class="line"><span class="comment"># 2.社交链接。编辑theme配置（../themes/hexo-theme-next/_config.yml#social）</span></span><br><span class="line"><span class="comment">#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#</span></span><br><span class="line"><span class="comment"># Usage: `Key: permalink || icon`</span></span><br><span class="line"><span class="comment"># Key is the link label showing to end users.</span></span><br><span class="line"><span class="comment"># Value before `||` delimiter is the target permalink, value after `||` delimiter is the name of Font Awesome icon.</span></span><br><span class="line"><span class="attr">social:</span></span><br><span class="line">  <span class="attr">GitHub:</span> <span class="string">https://github.com/jiyiqini</span> <span class="string">||</span> <span class="string">fab</span> <span class="string">fa-github</span>  <span class="comment">#Github，填写个人github主页地址</span></span><br><span class="line">  <span class="attr">E-Mail:</span> <span class="string">mailto:sh1426574360@163.com</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-envelop</span>  <span class="comment">#E-Mail，填写个人邮箱地址</span></span><br><span class="line">  <span class="comment">#Weibo: https://weibo.com/2949425821 || fab fa-weibo</span></span><br><span class="line">  <span class="comment">#Google: https://plus.google.com/yourname || fab fa-google</span></span><br><span class="line">  <span class="comment">#Twitter: https://twitter.com/yourname || fab fa-twitter</span></span><br><span class="line">  <span class="comment">#FB Page: https://www.facebook.com/yourname || fab fa-facebook</span></span><br><span class="line">  <span class="comment">#StackOverflow: https://stackoverflow.com/yourname || fab fa-stack-overflow</span></span><br><span class="line">  <span class="comment">#YouTube: https://youtube.com/yourname || fab fa-youtube</span></span><br><span class="line">  <span class="comment">#Instagram: https://instagram.com/yourname || fab fa-instagram</span></span><br><span class="line">  <span class="comment">#Skype: skype:yourname?call|chat || fab fa-skype</span></span><br><span class="line"></span><br><span class="line"><span class="attr">social_icons:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span>          <span class="comment">#是否开启社交链接icon</span></span><br><span class="line">  <span class="attr">icons_only:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">transition:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#</span></span><br><span class="line"><span class="comment"># 3.友情链接。编辑theme配置（../themes/hexo-theme-next/_config.yml#links_settings）</span></span><br><span class="line"><span class="comment">#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#</span></span><br><span class="line"><span class="attr">links_settings:</span></span><br><span class="line">  <span class="attr">icon:</span> <span class="string">fa</span> <span class="string">fa-link</span></span><br><span class="line">  <span class="attr">title:</span> <span class="string">友情链接</span></span><br><span class="line">  <span class="comment"># Available values: block | inline</span></span><br><span class="line">  <span class="attr">layout:</span> <span class="string">inline</span>    <span class="comment">#友情链接排版（block竖排列 inline横排列）</span></span><br><span class="line"><span class="attr">links:</span></span><br><span class="line">    <span class="string">简书:</span> <span class="string">https://www.jianshu.com/u/xxxx</span>    <span class="comment">#简书博客</span></span><br><span class="line">    <span class="string">掘金:</span> <span class="string">https://juejin.im/user/xxx</span>        <span class="comment">#掘金博客</span></span><br><span class="line">    <span class="string">更多其它:</span> <span class="string">其它链接地址...</span></span><br></pre></td></tr></table></figure>

<h1 id="配置GitHub角标"><a href="#配置GitHub角标" class="headerlink" title="配置GitHub角标"></a>配置GitHub角标</h1><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment">#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#</span></span><br><span class="line"><span class="comment"># GitHub链接主页。编辑theme配置（../themes/hexo-theme-next/_config.yml#github_banner）</span></span><br><span class="line"><span class="comment">#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#</span></span><br><span class="line"><span class="comment"># `Follow me on GitHub` banner in the top-right corner.</span></span><br><span class="line"><span class="attr">github_banner:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span>                              <span class="comment">#是否启动右上角的github-banner，默认关闭</span></span><br><span class="line">  <span class="attr">permalink:</span> <span class="string">https://github.com/jiyiqini</span>    <span class="comment">#你的github主页地址</span></span><br><span class="line">  <span class="attr">title:</span> <span class="string">小主，关注我吧~</span>                       <span class="comment">#当鼠标放在该banner上，提示的文本。</span></span><br></pre></td></tr></table></figure>

<h1 id="配置back2top与阅读进度"><a href="#配置back2top与阅读进度" class="headerlink" title="配置back2top与阅读进度"></a>配置back2top与阅读进度</h1><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment">#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#</span></span><br><span class="line"><span class="comment"># 1.回到顶部。编辑theme配置（../themes/hexo-theme-next/_config.yml#back2top）</span></span><br><span class="line"><span class="comment">#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#</span></span><br><span class="line"><span class="attr">back2top:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span>          <span class="comment">#是否开启回到顶部功能</span></span><br><span class="line">  <span class="attr">sidebar:</span> <span class="literal">false</span>        <span class="comment">#是否显示在侧边。选择false吧，让它单独在另外一侧好看些～</span></span><br><span class="line">  <span class="attr">scrollpercent:</span> <span class="literal">true</span>   <span class="comment">#滚动进度百分比是否显示在“回到顶部按钮”的文本中</span></span><br><span class="line">  </span><br><span class="line"><span class="comment">#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#</span></span><br><span class="line"><span class="comment"># 2.阅读进度。编辑theme配置（../themes/hexo-theme-next/_config.yml#back2top）</span></span><br><span class="line"><span class="comment">#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#</span></span><br><span class="line"><span class="attr">reading_progress:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span>          <span class="comment">#是否开启阅读进度</span></span><br><span class="line">  <span class="attr">position:</span> <span class="string">top</span>         <span class="comment">#阅读进度条的位置：top | bottom</span></span><br><span class="line">  <span class="attr">color:</span> <span class="string">"#37c6c0"</span>      <span class="comment">#自定义进度条颜色</span></span><br><span class="line">  <span class="attr">height:</span> <span class="string">3px</span>           <span class="comment">#自定义进度条高度</span></span><br></pre></td></tr></table></figure>

<h1 id="配置code-style"><a href="#配置code-style" class="headerlink" title="配置code-style"></a>配置code-style</h1><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment">#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#</span></span><br><span class="line"><span class="comment"># 插入代码配置。编辑theme配置（../themes/hexo-theme-next/_config.yml#codeblock）</span></span><br><span class="line"><span class="comment">#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#</span></span><br><span class="line"><span class="attr">codeblock:</span></span><br><span class="line">  <span class="comment"># Code Highlight theme</span></span><br><span class="line">  <span class="comment"># Available values: normal | night | night eighties | night blue | night bright | solarized | solarized dark | galactic</span></span><br><span class="line">  <span class="comment"># See: https://github.com/chriskempson/tomorrow-theme</span></span><br><span class="line">  <span class="attr">highlight_theme:</span> <span class="string">normal</span></span><br><span class="line">  <span class="comment"># Add copy button on codeblock</span></span><br><span class="line">  <span class="attr">copy_button:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span>        <span class="comment">#是否开启复制代码功能</span></span><br><span class="line">    <span class="attr">show_result:</span> <span class="literal">true</span>   <span class="comment">#是否显示复制成功提示</span></span><br><span class="line">    <span class="attr">style:</span> <span class="string">mac</span>          <span class="comment">#代码显示样式，可选：default | flat | mac</span></span><br></pre></td></tr></table></figure>

<h1 id="配置footer"><a href="#配置footer" class="headerlink" title="配置footer"></a>配置footer</h1><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment">#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#</span></span><br><span class="line"><span class="comment"># 阅读进度。编辑theme配置（../themes/hexo-theme-next/_config.yml#footer）</span></span><br><span class="line"><span class="comment">#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#</span></span><br><span class="line"><span class="attr">footer:</span></span><br><span class="line">  <span class="attr">since:</span> <span class="number">2020</span>   <span class="comment">#建立博客的年份。若未填写，则默认为当前年份。例如：我是2020年搭建的博客，故写2020</span></span><br><span class="line">  <span class="attr">counter:</span> <span class="literal">true</span> <span class="comment">#是否开启游客访问历史记录</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Icon between year and copyright info.</span></span><br><span class="line">  <span class="attr">icon:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">fa</span> <span class="string">fa-heart</span>   <span class="comment"># Icon name in Font Awesome. See: https://fontawesome.com/icons</span></span><br><span class="line">    <span class="attr">animated:</span> <span class="literal">false</span>     <span class="comment"># If you want to animate the icon, set it to true.</span></span><br><span class="line">    <span class="attr">color:</span> <span class="string">"#ff0000"</span>    <span class="comment"># Change the color of icon, using Hex Code.</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># If not defined, `author` from Hexo `_config.yml` will be used.</span></span><br><span class="line">  <span class="attr">copyright:</span> </span><br><span class="line"></span><br><span class="line">  <span class="comment"># Powered by Hexo &amp; NexT</span></span><br><span class="line">  <span class="attr">powered:</span> <span class="literal">true</span> <span class="comment">#例如：“由 Hexo &amp; NexT.Gemini 强力驱动”</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Beian ICP and gongan information for Chinese users. See: http://www.beian.miit.gov.cn, http://www.beian.gov.cn</span></span><br><span class="line">  <span class="attr">beian:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">icp:</span></span><br><span class="line">    <span class="attr">gongan_id:</span>          <span class="comment"># The digit in the num of gongan beian.</span></span><br><span class="line">    <span class="attr">gongan_num:</span>         <span class="comment"># The full num of gongan beian.</span></span><br><span class="line">    <span class="attr">gongan_icon_url:</span>    <span class="comment"># The icon for gongan beian. See: http://www.beian.gov.cn/portal/download</span></span><br></pre></td></tr></table></figure>

<h1 id="配置字数统计与预览时间"><a href="#配置字数统计与预览时间" class="headerlink" title="配置字数统计与预览时间"></a>配置字数统计与预览时间</h1><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment">#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#</span></span><br><span class="line"><span class="comment"># 1.当前博客站点目录下，执行安装命令：</span></span><br><span class="line"><span class="comment">#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#</span></span><br><span class="line"><span class="string">$</span> <span class="string">npm</span> <span class="string">i</span> <span class="string">--save</span> <span class="string">hexo-wordcount</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#</span></span><br><span class="line"><span class="comment"># 2.阅读进度。编辑theme配置（../themes/hexo-theme-next/_config.yml#post_wordcount）</span></span><br><span class="line"><span class="comment">#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#</span></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># Post wordcount display settings</span></span><br><span class="line"><span class="comment"># Dependencies: https://github.com/willin/hexo-wordcount</span></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"><span class="attr">post_wordcount:</span></span><br><span class="line">  <span class="attr">item_text:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">wordcount:</span> <span class="literal">true</span>       <span class="comment">#字数统计</span></span><br><span class="line">  <span class="attr">min2read:</span> <span class="literal">true</span>        <span class="comment">#预览时间</span></span><br><span class="line">  <span class="attr">totalcount:</span> <span class="literal">true</span>      <span class="comment">#总字数,显示在页面底部</span></span><br><span class="line">  <span class="attr">separated_meta:</span> <span class="literal">true</span></span><br><span class="line">  </span><br><span class="line"><span class="comment">#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#</span></span><br><span class="line"><span class="comment"># 3.配置显示样式。编辑post.swig配置（../themes/hexo-theme-next/layout/_macro/post.swig）</span></span><br><span class="line"><span class="comment"># 在合适的位置插入布局代码，例如在categories之后和LeanCloud之前，另换一行显示：</span></span><br><span class="line"><span class="comment">#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#</span></span><br><span class="line"><span class="string">...</span></span><br><span class="line"><span class="string">&#123;#</span> <span class="string">字数阅读统计功能</span> <span class="comment">#&#125;</span></span><br><span class="line"><span class="string">&#123;%-</span> <span class="string">if</span> <span class="string">theme.post_wordcount.item_text</span> <span class="string">%&#125;</span></span><br><span class="line"><span class="string">&lt;div&gt;</span></span><br><span class="line">  <span class="string">&lt;span</span> <span class="string">title="&#123;&#123;</span> <span class="string">__('post.wordcount')</span> <span class="string">&#125;&#125;"&gt;本文约</span> <span class="string">&#123;&#123;</span> <span class="string">wordcount(post.content)&#125;&#125;</span> <span class="string">字，&lt;/span&gt;</span></span><br><span class="line">  <span class="string">&lt;span</span> <span class="string">title="&#123;&#123;</span> <span class="string">__('post.min2read')</span> <span class="string">&#125;&#125;"&gt;阅读大概</span> <span class="string">&#123;&#123;</span> <span class="string">min2read(post.content)&#125;&#125;</span> <span class="string">分钟&lt;/span&gt;</span></span><br><span class="line"><span class="string">&lt;/div&gt;</span></span><br><span class="line"><span class="string">&#123;%</span> <span class="string">endif</span> <span class="string">%&#125;</span></span><br><span class="line"><span class="string">...</span></span><br></pre></td></tr></table></figure>



<h1 id="添加文末结束标语（passage-end-tag）"><a href="#添加文末结束标语（passage-end-tag）" class="headerlink" title="添加文末结束标语（passage-end-tag）"></a>添加文末结束标语（passage-end-tag）</h1><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment">#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#</span></span><br><span class="line"><span class="comment"># 1. 在 ../themes/next/layout/_macro/ 下新建 passage-end-tag.swig。</span></span><br><span class="line"><span class="comment"># 填充内容如下：</span></span><br><span class="line"><span class="comment">#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#</span></span><br><span class="line"><span class="string">&lt;div&gt;</span></span><br><span class="line">    <span class="string">&#123;%</span> <span class="string">if</span> <span class="string">not</span> <span class="string">is_index</span> <span class="string">%&#125;</span></span><br><span class="line">        <span class="string">&lt;div</span> <span class="string">style="text-align:center;color:#ccc;font-size:14px;"&gt;</span></span><br><span class="line">        <span class="string">------------------</span> <span class="string">本文结束&amp;nbsp;&lt;i</span> <span class="string">class="fa</span> <span class="string">fa-paw"&gt;&lt;/i&gt;&amp;nbsp;感谢阅读</span> <span class="string">------------------</span></span><br><span class="line">        <span class="string">&lt;/div&gt;</span></span><br><span class="line">    <span class="string">&#123;%</span> <span class="string">endif</span> <span class="string">%&#125;</span></span><br><span class="line"><span class="string">&lt;/div&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#</span></span><br><span class="line"><span class="comment"># 2. 打开 ../themes/next/layout/_macro/post.swig 文件，在 post-body（即：END POST BODY）之后，添加如下:</span></span><br><span class="line"><span class="comment">#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#</span></span><br><span class="line"><span class="string">&#123;#</span> <span class="string">文末部分，即</span> <span class="string">END</span> <span class="string">POST</span> <span class="string">BODY</span> <span class="string">之后#&#125;</span></span><br><span class="line"><span class="string">&#123;%-</span> <span class="string">if</span> <span class="string">not</span> <span class="string">is_index</span> <span class="string">%&#125;</span></span><br><span class="line">  <span class="string">...</span></span><br><span class="line">  <span class="string">&#123;#每篇文章末尾统一添加“本文结束”标记#&#125;</span></span><br><span class="line">  <span class="string">&#123;%</span> <span class="string">if</span> <span class="string">theme.passage_end_tag.enable</span> <span class="string">%&#125;</span></span><br><span class="line">    <span class="string">&#123;%</span> <span class="string">include</span> <span class="string">'passage-end-tag.swig'</span> <span class="string">%&#125;</span></span><br><span class="line">  <span class="string">&#123;%</span> <span class="string">endif</span> <span class="string">%&#125;</span></span><br><span class="line">  <span class="string">...</span></span><br><span class="line"><span class="string">&#123;%</span> <span class="string">endif</span> <span class="string">%&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#</span></span><br><span class="line"><span class="comment"># 3. 在主题配置文件下添加配置，在 ../themes/next/_config.yml 文件中添加开关：</span></span><br><span class="line"><span class="comment">#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#</span></span><br><span class="line"><span class="comment"># 文章末尾添加“本文结束”标记</span></span><br><span class="line"><span class="attr">passage_end_tag:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<h1 id="添加评论功能（Valin）"><a href="#添加评论功能（Valin）" class="headerlink" title="添加评论功能（Valin）"></a>添加评论功能（Valin）</h1><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment">#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#</span></span><br><span class="line"><span class="comment"># 1.注册LeanCloud，获取AppId和AppKey。</span></span><br><span class="line"><span class="comment"># 在合适的位置插入布局代码，例如在categories之后和LeanCloud之前，另换一行显示：</span></span><br><span class="line"><span class="comment">#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#</span></span><br><span class="line"><span class="number">1</span><span class="string">.</span> <span class="string">注册LeanCloud账户。</span></span><br><span class="line"><span class="number">2</span><span class="string">.</span> <span class="string">实名制（姓名、手机号、身份证号）</span></span><br><span class="line"><span class="number">3</span><span class="string">.</span> <span class="string">创建应用，随便取个应用名。例如：Jiyiqini-Hexo-Blogs</span></span><br><span class="line"><span class="number">4</span><span class="string">.</span> <span class="string">实名制和创建应用成功后，会得到分配的AppId和AppKey。然后进行下面一步～</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#</span></span><br><span class="line"><span class="comment"># 2.配置Valine。编辑theme配置（../themes/hexo-theme-next/_config.yml#valine）</span></span><br><span class="line"><span class="comment"># 在合适的位置插入布局代码，例如在categories之后和LeanCloud之前，另换一行显示：</span></span><br><span class="line"><span class="comment">#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#</span></span><br><span class="line"><span class="comment"># Valine评论系统</span></span><br><span class="line"><span class="comment"># See: https://leancloud.cn/dashboard/applist.html#/apps</span></span><br><span class="line"><span class="comment"># For more information: https://valine.js.org, https://github.com/xCss/Valine</span></span><br><span class="line"><span class="attr">valine:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">appid:</span> <span class="string">xxxx-xxxx</span>      <span class="comment">#在LeanCloud应用注册获取AppId</span></span><br><span class="line">  <span class="attr">appkey:</span> <span class="string">yyyy-yyyy</span>     <span class="comment">#在LeanCloud应用注册获取AppKey</span></span><br><span class="line">  <span class="attr">notify:</span> <span class="literal">true</span>          <span class="comment">#是否启用邮件通知</span></span><br><span class="line">  <span class="attr">verify:</span> <span class="literal">false</span>         <span class="comment">#是否启用验证码</span></span><br><span class="line">  <span class="attr">placeholder:</span> <span class="string">发表评论或建议</span> <span class="comment">#默认评论区hint("Just go go")</span></span><br><span class="line">  <span class="attr">avatar:</span> <span class="string">monsterid</span>     <span class="comment"># Gravatar style.头像风格，默认为mm，可进入网址：https://valine.js.org/visitor.html查看头像设置，这里有许多头像风格，进行设置</span></span><br><span class="line">  <span class="attr">guest_info:</span> <span class="string">nick,mail,link</span> <span class="comment"># 自定义评论框头部（Custom comment header）</span></span><br><span class="line">  <span class="attr">pageSize:</span> <span class="number">10</span>          <span class="comment">#分页大小阈值，例如：达到10条评论后分页</span></span><br><span class="line">  <span class="attr">language:</span> <span class="string">zh-cn</span>       <span class="comment">#语言，可选: en, zh-cn</span></span><br><span class="line">  <span class="attr">visitor:</span> <span class="literal">false</span>        <span class="comment">#Article reading statistic.是否允许游客评论，进入官网查看设置：https://valine.js.org/visitor.html</span></span><br><span class="line">  <span class="attr">comment_count:</span> <span class="literal">false</span>  <span class="comment">#If false, comment count will only be displayed in post page, not in home page</span></span><br><span class="line">  <span class="attr">recordIP:</span> <span class="literal">true</span>        <span class="comment">#Whether to record the commenter IP</span></span><br><span class="line">  <span class="attr">serverURLs:</span>           <span class="comment">#When the custom domain name is enabled, fill it in here (it will be detected automatically by default, no need to fill in)</span></span><br><span class="line">  <span class="comment">#post_meta_order: 0</span></span><br><span class="line">  <span class="comment">#background: /medias/comment_bg.png</span></span><br><span class="line">  </span><br><span class="line"><span class="comment">#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#</span></span><br><span class="line"><span class="comment"># 3.在需要的文章Front-Matter前，按需配置是否支持评论</span></span><br><span class="line"><span class="comment">#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#</span></span><br><span class="line"><span class="comment">#例如：分类（../source/categories/index.md）</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">文章分类</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2020</span><span class="number">-05</span><span class="number">-16</span> <span class="number">13</span><span class="string">:21:33</span></span><br><span class="line"><span class="attr">categories:</span> <span class="string">Testing</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">"categories"</span></span><br><span class="line"><span class="attr">comments:</span> <span class="literal">false</span>             <span class="comment">#禁止评论</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure>

<h1 id="添加卡通看板娘（Live2D）"><a href="#添加卡通看板娘（Live2D）" class="headerlink" title="添加卡通看板娘（Live2D）"></a>添加卡通看板娘（Live2D）</h1><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment">#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#</span></span><br><span class="line"><span class="comment"># 1.当前博客站点目录下，执行安装命令（安装live2d）：</span></span><br><span class="line"><span class="comment">#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#</span></span><br><span class="line"><span class="string">$</span> <span class="string">npm</span> <span class="string">install</span> <span class="string">--save</span> <span class="string">hexo-helper-live2d</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#</span></span><br><span class="line"><span class="comment"># 2.当前博客站点目录下，执行安装命令（安装例如模型shizuku）：</span></span><br><span class="line"><span class="comment">#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#</span></span><br><span class="line"><span class="string">$</span> <span class="string">npm</span> <span class="string">install</span> <span class="string">live2d-widget-model-shizuku</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#</span></span><br><span class="line"><span class="comment"># 3.设置显示。编辑theme配置（../themes/theme-hexo-next/layout/_layout.swig）</span></span><br><span class="line"><span class="comment"># 添加：在&lt;/body&gt;前一行添加 &#123;&#123; live2d() &#125;&#125;</span></span><br><span class="line"><span class="comment">#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#</span></span><br><span class="line"><span class="string">&lt;!DOCTYPE</span> <span class="string">html&gt;</span></span><br><span class="line"><span class="string">&lt;html</span> <span class="string">lang="&#123;&#123;</span> <span class="string">config.language</span> <span class="string">&#125;&#125;"&gt;</span></span><br><span class="line"><span class="string">&lt;head&gt;...&lt;/head&gt;</span></span><br><span class="line"><span class="string">&lt;body&gt;</span></span><br><span class="line">    <span class="string">...</span></span><br><span class="line">    <span class="string">&#123;####</span> <span class="string">添加：卡通看板娘</span> <span class="comment">####&#125;</span></span><br><span class="line">    <span class="string">&#123;&#123;</span> <span class="string">live2d()</span> <span class="string">&#125;&#125;</span></span><br><span class="line"><span class="string">&lt;/body&gt;</span></span><br><span class="line"><span class="string">&lt;/html&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#</span></span><br><span class="line"><span class="comment"># 4.配置Live2D。编辑global配置（../&lt;your_hexo_blog&gt;/_config.yml#Live2D）</span></span><br><span class="line"><span class="comment">#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#</span></span><br><span class="line"><span class="comment"># Live2D</span></span><br><span class="line"><span class="comment"># https://github.com/EYHN/hexo-helper-live2d</span></span><br><span class="line"><span class="comment"># Refer: https://fjkang.github.io/2017/12/08/%E6%B7%BB%E5%8A%A0%E4%B8%80%E4%B8%AA%E8%90%8C%E7%89%A9/</span></span><br><span class="line"><span class="comment"># live2d:</span></span><br><span class="line"><span class="comment">#   model: z16 # 模型名称 默认值: z16</span></span><br><span class="line"><span class="comment">#   width: 150 # 宽度 默认值: 150</span></span><br><span class="line"><span class="comment">#   height: 300 # 高度 默认值: 300</span></span><br><span class="line"><span class="comment">#   scaling: 1 # 分辨率缩放倍率 默认值: 2</span></span><br><span class="line"><span class="comment">#   opacityDefault: 0.7 # 初始的透明度 默认值: 0.7</span></span><br><span class="line"><span class="comment">#   opacityHover: 1 # 鼠标悬浮时的透明度 默认值: 1</span></span><br><span class="line"><span class="comment">#   mobileShow: true # 是否在移动设备上显示 默认值: true</span></span><br><span class="line"><span class="comment">#   mobileScaling: 0.5 # 移动设备缩放倍率 默认值: 0.5</span></span><br><span class="line"><span class="comment">#   position: right # 模型左右侧放置位置 默认值: right</span></span><br><span class="line"><span class="comment">#   horizontalOffset: 0 # 元素的水平偏移 默认值: 0</span></span><br><span class="line"><span class="comment">#   verticalOffset: -20 # 元素的底部偏移 默认值: -20</span></span><br><span class="line"><span class="comment">#   id: live2dcanvas # 元素的id 默认值: live2dcanvas</span></span><br><span class="line"><span class="comment">#   deviceJsSource: local # current-device 脚本的来源 默认值: local</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Live2D</span></span><br><span class="line"><span class="comment"># https://github.com/EYHN/hexo-helper-live2d</span></span><br><span class="line"><span class="comment"># Refer: http://yearito.cn/posts/hexo-theme-beautify.html</span></span><br><span class="line"><span class="attr">live2d:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">pluginRootPath:</span> <span class="string">live2dw/</span></span><br><span class="line">  <span class="attr">pluginJsPath:</span> <span class="string">lib/</span></span><br><span class="line">  <span class="attr">pluginModelPath:</span> <span class="string">assets/</span> <span class="string">Relative)</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># 脚本加载源</span></span><br><span class="line">  <span class="attr">scriptFrom:</span> <span class="string">local</span> <span class="comment">#默认从本地加载脚本</span></span><br><span class="line">  <span class="comment"># scriptFrom: jsdelivr # 从 jsdelivr CDN 加载脚本</span></span><br><span class="line">  <span class="comment"># scriptFrom: unpkg # 从 unpkg CDN 加载脚本</span></span><br><span class="line">  <span class="comment"># scriptFrom: https://cdn.jsdelivr.net/npm/live2d-widget@3.x/lib/L2Dwidget.min.js # 从自定义地址加载脚本</span></span><br><span class="line">  <span class="attr">tagMode:</span> <span class="literal">true</span>     <span class="comment">#开启true。只在有 &#123;&#123; live2d() &#125;&#125; 标签的页面上加载 / 在所有页面上加载</span></span><br><span class="line">  <span class="attr">log:</span> <span class="literal">false</span>        <span class="comment">#是否在控制台打印日志</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># 选择看板娘模型</span></span><br><span class="line">  <span class="attr">model:</span></span><br><span class="line">    <span class="attr">use:</span> <span class="string">live2d-widget-model-shizuku</span>  <span class="comment"># npm package的名字。这里使用的shizuku模型（npm i live2d-widget-model-shizuku）</span></span><br><span class="line">    <span class="comment"># use: wanko # /live2d_models/ 目录下的模型文件夹名称</span></span><br><span class="line">    <span class="comment"># use: ./wives/wanko # 站点根目录下的模型文件夹名称</span></span><br><span class="line">    <span class="comment"># use: https://cdn.jsdelivr.net/npm/live2d-widget-model-wanko@1.0.5/assets/wanko.model.json # 自定义网络数据源</span></span><br><span class="line">  <span class="attr">display:</span></span><br><span class="line">    <span class="attr">position:</span> <span class="string">left</span>  <span class="comment">#显示在左边还是右边</span></span><br><span class="line">    <span class="attr">width:</span> <span class="number">100</span>      <span class="comment">#宽度</span></span><br><span class="line">    <span class="attr">height:</span> <span class="number">180</span>     <span class="comment">#高度</span></span><br><span class="line">  <span class="attr">mobile:</span></span><br><span class="line">    <span class="attr">show:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">react:</span></span><br><span class="line">    <span class="attr">opacityDefault:</span> <span class="number">0.7</span> <span class="comment">#默认透明度</span></span><br></pre></td></tr></table></figure>

<h1 id="添加鼠标点击特效（❤️、爆炸）"><a href="#添加鼠标点击特效（❤️、爆炸）" class="headerlink" title="添加鼠标点击特效（❤️、爆炸）"></a>添加鼠标点击特效（❤️、爆炸）</h1><p>☞ <strong>添加步骤：</strong></p>
<blockquote>
<ol>
<li><code>../themes/next/source/js</code> 下创建特效js. </li>
<li><code>../themes/next/layout/_layout.swig#head</code> 部分引用js和其它辅助js。</li>
</ol>
</blockquote>
<ol>
<li><p>主题配置项：<code>../themes/theme-hexo-next/_config.yml#cursor_effect</code></p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Customize different effects while clicking cursor.</span></span><br><span class="line"><span class="comment"># type values: love 浮出爱心 | explosion 爆炸 | ...</span></span><br><span class="line"><span class="attr">cursor_effect:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">love</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>配置：<code>../themes/theme-hexo-next/layout/_custom/custom.swig</code></p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="string">&#123;%</span> <span class="string">if</span> <span class="string">theme.cursor_effect.enable</span> <span class="string">%&#125;</span></span><br><span class="line">  <span class="string">&#123;%</span> <span class="string">if</span> <span class="string">theme.cursor_effect.type</span> <span class="string">==</span> <span class="string">"love"</span> <span class="string">%&#125;</span></span><br><span class="line">    <span class="string">&lt;script</span> <span class="string">src="/js/effects/cursor/love.min.js"&gt;&lt;/script&gt;</span></span><br><span class="line">  <span class="string">&#123;%</span> <span class="string">elseif</span> <span class="string">theme.cursor_effect.type</span> <span class="string">==</span> <span class="string">"explosion"</span> <span class="string">%&#125;</span></span><br><span class="line">    <span class="string">&lt;canvas</span> <span class="string">class="fireworks"</span> <span class="string">style="position:</span> <span class="string">fixed;left:</span> <span class="number">0</span><span class="string">;top:</span> <span class="number">0</span><span class="string">;z-index:</span> <span class="number">1</span><span class="string">;</span> <span class="attr">pointer-events:</span> <span class="string">none;"</span> <span class="string">&gt;&lt;/canvas&gt;</span></span><br><span class="line">    <span class="string">&lt;script</span> <span class="string">src="//cdn.bootcss.com/animejs/2.2.0/anime.min.js"&gt;&lt;/script&gt;</span></span><br><span class="line">    <span class="string">&lt;script</span> <span class="string">src="/js/effects/cursor/explosion.min.js"&gt;&lt;/script&gt;</span></span><br><span class="line">  <span class="string">&#123;%</span> <span class="string">endif</span> <span class="string">%&#125;</span></span><br><span class="line"><span class="string">&#123;%</span> <span class="string">endif</span> <span class="string">%&#125;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>配置：<code>/themes/theme-hexo-next/layout/_layout.swig</code></p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="string">&#123;%</span> <span class="string">include</span> <span class="string">'_custom/custom.swig'</span> <span class="string">%&#125;</span></span><br></pre></td></tr></table></figure>
</li>
</ol>
<ul>
<li><p><em>示例特效js：红心（love.min.js）</em></p>
  <figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">!<span class="function"><span class="keyword">function</span>(<span class="params">e,t,a</span>)</span>&#123;<span class="function"><span class="keyword">function</span> <span class="title">n</span>(<span class="params"></span>)</span>&#123;c(<span class="string">".heart&#123;width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);&#125;.heart:after,.heart:before&#123;content: '';width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 500%;-moz-border-radius: 50%;position: fixed;&#125;.heart:after&#123;top: -5px;&#125;.heart:before&#123;left: -5px;&#125;"</span>),o(),r()&#125;<span class="function"><span class="keyword">function</span> <span class="title">r</span>(<span class="params"></span>)</span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> e=<span class="number">0</span>;e&lt;d.length;e++)d[e].alpha&lt;=<span class="number">0</span>?(t.body.removeChild(d[e].el),d.splice(e,<span class="number">1</span>)):(d[e].y--,d[e].scale+=<span class="number">.004</span>,d[e].alpha-=<span class="number">.013</span>,d[e].el.style.cssText=<span class="string">"left:"</span>+d[e].x+<span class="string">"px;top:"</span>+d[e].y+<span class="string">"px;opacity:"</span>+d[e].alpha+<span class="string">";transform:scale("</span>+d[e].scale+<span class="string">","</span>+d[e].scale+<span class="string">") rotate(45deg);background:"</span>+d[e].color+<span class="string">";z-index:99999"</span>);requestAnimationFrame(r)&#125;<span class="function"><span class="keyword">function</span> <span class="title">o</span>(<span class="params"></span>)</span>&#123;<span class="keyword">var</span> t=<span class="string">"function"</span>==<span class="keyword">typeof</span> e.onclick&amp;&amp;e.onclick;e.onclick=<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;t&amp;&amp;t(),i(e)&#125;&#125;<span class="function"><span class="keyword">function</span> <span class="title">i</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">var</span> a=t.createElement(<span class="string">"div"</span>);a.className=<span class="string">"heart"</span>,d.push(&#123;<span class="attr">el</span>:a,<span class="attr">x</span>:e.clientX<span class="number">-5</span>,<span class="attr">y</span>:e.clientY<span class="number">-5</span>,<span class="attr">scale</span>:<span class="number">1</span>,<span class="attr">alpha</span>:<span class="number">1</span>,<span class="attr">color</span>:s()&#125;),t.body.appendChild(a)&#125;<span class="function"><span class="keyword">function</span> <span class="title">c</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">var</span> a=t.createElement(<span class="string">"style"</span>);a.type=<span class="string">"text/css"</span>;<span class="keyword">try</span>&#123;a.appendChild(t.createTextNode(e))&#125;<span class="keyword">catch</span>(t)&#123;a.styleSheet.cssText=e&#125;t.getElementsByTagName(<span class="string">"head"</span>)[<span class="number">0</span>].appendChild(a)&#125;<span class="function"><span class="keyword">function</span> <span class="title">s</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span><span class="string">"rgb("</span>+~~(<span class="number">255</span>*<span class="built_in">Math</span>.random())+<span class="string">","</span>+~~(<span class="number">255</span>*<span class="built_in">Math</span>.random())+<span class="string">","</span>+~~(<span class="number">255</span>*<span class="built_in">Math</span>.random())+<span class="string">")"</span>&#125;<span class="keyword">var</span> d=[];e.requestAnimationFrame=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> e.requestAnimationFrame||e.webkitRequestAnimationFrame||e.mozRequestAnimationFrame||e.oRequestAnimationFrame||e.msRequestAnimationFrame||<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;setTimeout(e,<span class="number">1e3</span>/<span class="number">60</span>)&#125;&#125;(),n()&#125;(<span class="built_in">window</span>,<span class="built_in">document</span>);</span><br></pre></td></tr></table></figure>
</li>
<li><p><em>示例特效js：爆炸（explosion.min.js）</em></p>
  <figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="meta">"use strict"</span>;<span class="function"><span class="keyword">function</span> <span class="title">updateCoords</span>(<span class="params">e</span>)</span>&#123;pointerX=(e.clientX||e.touches[<span class="number">0</span>].clientX)-canvasEl.getBoundingClientRect().left,pointerY=e.clientY||e.touches[<span class="number">0</span>].clientY-canvasEl.getBoundingClientRect().top&#125;<span class="function"><span class="keyword">function</span> <span class="title">setParticuleDirection</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">var</span> t=anime.random(<span class="number">0</span>,<span class="number">360</span>)*<span class="built_in">Math</span>.PI/<span class="number">180</span>,a=anime.random(<span class="number">50</span>,<span class="number">180</span>),n=[<span class="number">-1</span>,<span class="number">1</span>][anime.random(<span class="number">0</span>,<span class="number">1</span>)]*a;<span class="keyword">return</span>&#123;<span class="attr">x</span>:e.x+n*<span class="built_in">Math</span>.cos(t),<span class="attr">y</span>:e.y+n*<span class="built_in">Math</span>.sin(t)&#125;&#125;<span class="function"><span class="keyword">function</span> <span class="title">createParticule</span>(<span class="params">e,t</span>)</span>&#123;<span class="keyword">var</span> a=&#123;&#125;;<span class="keyword">return</span> a.x=e,a.y=t,a.color=colors[anime.random(<span class="number">0</span>,colors.length<span class="number">-1</span>)],a.radius=anime.random(<span class="number">16</span>,<span class="number">32</span>),a.endPos=setParticuleDirection(a),a.draw=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,<span class="number">0</span>,<span class="number">2</span>*<span class="built_in">Math</span>.PI,!<span class="number">0</span>),ctx.fillStyle=a.color,ctx.fill()&#125;,a&#125;<span class="function"><span class="keyword">function</span> <span class="title">createCircle</span>(<span class="params">e,t</span>)</span>&#123;<span class="keyword">var</span> a=&#123;&#125;;<span class="keyword">return</span> a.x=e,a.y=t,a.color=<span class="string">"#F00"</span>,a.radius=<span class="number">0.1</span>,a.alpha=<span class="number">0.5</span>,a.lineWidth=<span class="number">6</span>,a.draw=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;ctx.globalAlpha=a.alpha,ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,<span class="number">0</span>,<span class="number">2</span>*<span class="built_in">Math</span>.PI,!<span class="number">0</span>),ctx.lineWidth=a.lineWidth,ctx.strokeStyle=a.color,ctx.stroke(),ctx.globalAlpha=<span class="number">1</span>&#125;,a&#125;<span class="function"><span class="keyword">function</span> <span class="title">renderParticule</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> t=<span class="number">0</span>;t&lt;e.animatables.length;t++)&#123;e.animatables[t].target.draw()&#125;&#125;<span class="function"><span class="keyword">function</span> <span class="title">animateParticules</span>(<span class="params">e,t</span>)</span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> a=createCircle(e,t),n=[],i=<span class="number">0</span>;i&lt;numberOfParticules;i++)&#123;n.push(createParticule(e,t))&#125;anime.timeline().add(&#123;<span class="attr">targets</span>:n,<span class="attr">x</span>:<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">return</span> e.endPos.x&#125;,<span class="attr">y</span>:<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">return</span> e.endPos.y&#125;,<span class="attr">radius</span>:<span class="number">0.1</span>,<span class="attr">duration</span>:anime.random(<span class="number">1200</span>,<span class="number">1800</span>),<span class="attr">easing</span>:<span class="string">"easeOutExpo"</span>,<span class="attr">update</span>:renderParticule&#125;).add(&#123;<span class="attr">targets</span>:a,<span class="attr">radius</span>:anime.random(<span class="number">80</span>,<span class="number">160</span>),<span class="attr">lineWidth</span>:<span class="number">0</span>,<span class="attr">alpha</span>:&#123;<span class="attr">value</span>:<span class="number">0</span>,<span class="attr">easing</span>:<span class="string">"linear"</span>,<span class="attr">duration</span>:anime.random(<span class="number">600</span>,<span class="number">800</span>)&#125;,<span class="attr">duration</span>:anime.random(<span class="number">1200</span>,<span class="number">1800</span>),<span class="attr">easing</span>:<span class="string">"easeOutExpo"</span>,<span class="attr">update</span>:renderParticule,<span class="attr">offset</span>:<span class="number">0</span>&#125;)&#125;<span class="function"><span class="keyword">function</span> <span class="title">debounce</span>(<span class="params">e,t</span>)</span>&#123;<span class="keyword">var</span> a;<span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">var</span> n=<span class="keyword">this</span>,i=<span class="built_in">arguments</span>;clearTimeout(a),a=setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;e.apply(n,i)&#125;,t)&#125;&#125;<span class="keyword">var</span> canvasEl=<span class="built_in">document</span>.querySelector(<span class="string">".fireworks"</span>);<span class="keyword">if</span>(canvasEl)&#123;<span class="keyword">var</span> ctx=canvasEl.getContext(<span class="string">"2d"</span>),numberOfParticules=<span class="number">30</span>,pointerX=<span class="number">0</span>,pointerY=<span class="number">0</span>,tap=<span class="string">"mousedown"</span>,colors=[<span class="string">"#FF1461"</span>,<span class="string">"#18FF92"</span>,<span class="string">"#5A87FF"</span>,<span class="string">"#FBF38C"</span>],setCanvasSize=debounce(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;canvasEl.width=<span class="number">2</span>*<span class="built_in">window</span>.innerWidth,canvasEl.height=<span class="number">2</span>*<span class="built_in">window</span>.innerHeight,canvasEl.style.width=<span class="built_in">window</span>.innerWidth+<span class="string">"px"</span>,canvasEl.style.height=<span class="built_in">window</span>.innerHeight+<span class="string">"px"</span>,canvasEl.getContext(<span class="string">"2d"</span>).scale(<span class="number">2</span>,<span class="number">2</span>)&#125;,<span class="number">500</span>),render=anime(&#123;<span class="attr">duration</span>:<span class="number">1</span>/<span class="number">0</span>,<span class="attr">update</span>:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;ctx.clearRect(<span class="number">0</span>,<span class="number">0</span>,canvasEl.width,canvasEl.height)&#125;&#125;);<span class="built_in">document</span>.addEventListener(tap,<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;<span class="string">"sidebar"</span>!==e.target.id&amp;&amp;<span class="string">"toggle-sidebar"</span>!==e.target.id&amp;&amp;<span class="string">"A"</span>!==e.target.nodeName&amp;&amp;<span class="string">"IMG"</span>!==e.target.nodeName&amp;&amp;(render.play(),updateCoords(e),animateParticules(pointerX,pointerY))&#125;,!<span class="number">1</span>),setCanvasSize(),<span class="built_in">window</span>.addEventListener(<span class="string">"resize"</span>,setCanvasSize,!<span class="number">1</span>)&#125;<span class="string">"use strict"</span>;<span class="function"><span class="keyword">function</span> <span class="title">updateCoords</span>(<span class="params">e</span>)</span>&#123;pointerX=(e.clientX||e.touches[<span class="number">0</span>].clientX)-canvasEl.getBoundingClientRect().left,pointerY=e.clientY||e.touches[<span class="number">0</span>].clientY-canvasEl.getBoundingClientRect().top&#125;<span class="function"><span class="keyword">function</span> <span class="title">setParticuleDirection</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">var</span> t=anime.random(<span class="number">0</span>,<span class="number">360</span>)*<span class="built_in">Math</span>.PI/<span class="number">180</span>,a=anime.random(<span class="number">50</span>,<span class="number">180</span>),n=[<span class="number">-1</span>,<span class="number">1</span>][anime.random(<span class="number">0</span>,<span class="number">1</span>)]*a;<span class="keyword">return</span>&#123;<span class="attr">x</span>:e.x+n*<span class="built_in">Math</span>.cos(t),<span class="attr">y</span>:e.y+n*<span class="built_in">Math</span>.sin(t)&#125;&#125;<span class="function"><span class="keyword">function</span> <span class="title">createParticule</span>(<span class="params">e,t</span>)</span>&#123;<span class="keyword">var</span> a=&#123;&#125;;<span class="keyword">return</span> a.x=e,a.y=t,a.color=colors[anime.random(<span class="number">0</span>,colors.length<span class="number">-1</span>)],a.radius=anime.random(<span class="number">16</span>,<span class="number">32</span>),a.endPos=setParticuleDirection(a),a.draw=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,<span class="number">0</span>,<span class="number">2</span>*<span class="built_in">Math</span>.PI,!<span class="number">0</span>),ctx.fillStyle=a.color,ctx.fill()&#125;,a&#125;<span class="function"><span class="keyword">function</span> <span class="title">createCircle</span>(<span class="params">e,t</span>)</span>&#123;<span class="keyword">var</span> a=&#123;&#125;;<span class="keyword">return</span> a.x=e,a.y=t,a.color=<span class="string">"#F00"</span>,a.radius=<span class="number">0.1</span>,a.alpha=<span class="number">0.5</span>,a.lineWidth=<span class="number">6</span>,a.draw=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;ctx.globalAlpha=a.alpha,ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,<span class="number">0</span>,<span class="number">2</span>*<span class="built_in">Math</span>.PI,!<span class="number">0</span>),ctx.lineWidth=a.lineWidth,ctx.strokeStyle=a.color,ctx.stroke(),ctx.globalAlpha=<span class="number">1</span>&#125;,a&#125;<span class="function"><span class="keyword">function</span> <span class="title">renderParticule</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> t=<span class="number">0</span>;t&lt;e.animatables.length;t++)&#123;e.animatables[t].target.draw()&#125;&#125;<span class="function"><span class="keyword">function</span> <span class="title">animateParticules</span>(<span class="params">e,t</span>)</span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> a=createCircle(e,t),n=[],i=<span class="number">0</span>;i&lt;numberOfParticules;i++)&#123;n.push(createParticule(e,t))&#125;anime.timeline().add(&#123;<span class="attr">targets</span>:n,<span class="attr">x</span>:<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">return</span> e.endPos.x&#125;,<span class="attr">y</span>:<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">return</span> e.endPos.y&#125;,<span class="attr">radius</span>:<span class="number">0.1</span>,<span class="attr">duration</span>:anime.random(<span class="number">1200</span>,<span class="number">1800</span>),<span class="attr">easing</span>:<span class="string">"easeOutExpo"</span>,<span class="attr">update</span>:renderParticule&#125;).add(&#123;<span class="attr">targets</span>:a,<span class="attr">radius</span>:anime.random(<span class="number">80</span>,<span class="number">160</span>),<span class="attr">lineWidth</span>:<span class="number">0</span>,<span class="attr">alpha</span>:&#123;<span class="attr">value</span>:<span class="number">0</span>,<span class="attr">easing</span>:<span class="string">"linear"</span>,<span class="attr">duration</span>:anime.random(<span class="number">600</span>,<span class="number">800</span>)&#125;,<span class="attr">duration</span>:anime.random(<span class="number">1200</span>,<span class="number">1800</span>),<span class="attr">easing</span>:<span class="string">"easeOutExpo"</span>,<span class="attr">update</span>:renderParticule,<span class="attr">offset</span>:<span class="number">0</span>&#125;)&#125;<span class="function"><span class="keyword">function</span> <span class="title">debounce</span>(<span class="params">e,t</span>)</span>&#123;<span class="keyword">var</span> a;<span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">var</span> n=<span class="keyword">this</span>,i=<span class="built_in">arguments</span>;clearTimeout(a),a=setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;e.apply(n,i)&#125;,t)&#125;&#125;<span class="keyword">var</span> canvasEl=<span class="built_in">document</span>.querySelector(<span class="string">".fireworks"</span>);<span class="keyword">if</span>(canvasEl)&#123;<span class="keyword">var</span> ctx=canvasEl.getContext(<span class="string">"2d"</span>),numberOfParticules=<span class="number">30</span>,pointerX=<span class="number">0</span>,pointerY=<span class="number">0</span>,tap=<span class="string">"mousedown"</span>,colors=[<span class="string">"#FF1461"</span>,<span class="string">"#18FF92"</span>,<span class="string">"#5A87FF"</span>,<span class="string">"#FBF38C"</span>],setCanvasSize=debounce(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;canvasEl.width=<span class="number">2</span>*<span class="built_in">window</span>.innerWidth,canvasEl.height=<span class="number">2</span>*<span class="built_in">window</span>.innerHeight,canvasEl.style.width=<span class="built_in">window</span>.innerWidth+<span class="string">"px"</span>,canvasEl.style.height=<span class="built_in">window</span>.innerHeight+<span class="string">"px"</span>,canvasEl.getContext(<span class="string">"2d"</span>).scale(<span class="number">2</span>,<span class="number">2</span>)&#125;,<span class="number">500</span>),render=anime(&#123;<span class="attr">duration</span>:<span class="number">1</span>/<span class="number">0</span>,<span class="attr">update</span>:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;ctx.clearRect(<span class="number">0</span>,<span class="number">0</span>,canvasEl.width,canvasEl.height)&#125;&#125;);<span class="built_in">document</span>.addEventListener(tap,<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;<span class="string">"sidebar"</span>!==e.target.id&amp;&amp;<span class="string">"toggle-sidebar"</span>!==e.target.id&amp;&amp;<span class="string">"A"</span>!==e.target.nodeName&amp;&amp;<span class="string">"IMG"</span>!==e.target.nodeName&amp;&amp;(render.play(),updateCoords(e),animateParticules(pointerX,pointerY))&#125;,!<span class="number">1</span>),setCanvasSize(),<span class="built_in">window</span>.addEventListener(<span class="string">"resize"</span>,setCanvasSize,!<span class="number">1</span>)&#125;;</span><br></pre></td></tr></table></figure>

</li>
</ul>
<h1 id="添加背景线条特效（canvas-nest）"><a href="#添加背景线条特效（canvas-nest）" class="headerlink" title="添加背景线条特效（canvas-nest）"></a>添加背景线条特效（canvas-nest）</h1><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment">#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#</span></span><br><span class="line"><span class="comment"># 1. 当前博客站点目录下，../themes/next/_config.yml 配置文件中开启 canvas_nest</span></span><br><span class="line"><span class="comment">#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#</span></span><br><span class="line"><span class="comment"># https://github.com/hustcc/canvas-nest.js</span></span><br><span class="line"><span class="comment"># https://github.com/theme-next/theme-next-canvas-nest</span></span><br><span class="line"><span class="comment"># 配置详见： https://github.com/hustcc/canvas-nest.js#configuration</span></span><br><span class="line"><span class="comment"># 动态线条效果，会向鼠标集中</span></span><br><span class="line"><span class="attr">canvas_nest:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span>                 <span class="comment"># 打开这个开关</span></span><br><span class="line">  <span class="attr">color:</span> <span class="string">'0,0,250'</span>             <span class="comment"># color of lines, default: '0,0,0'; RGB values: (R,G,B).(<span class="doctag">note:</span> use ',' to separate.)</span></span><br><span class="line">  <span class="attr">pointColor:</span> <span class="string">'156,39,176'</span>     <span class="comment"># color of points, default: '0,0,0'; RGB values: (R,G,B).(<span class="doctag">note:</span> use ',' to separate.)</span></span><br><span class="line">  <span class="attr">opacity:</span> <span class="string">'0.5'</span>               <span class="comment"># the opacity of line (0~1), default: 0.5.</span></span><br><span class="line">  <span class="attr">count:</span> <span class="string">'99'</span>                  <span class="comment"># the number of lines, default: 99.</span></span><br><span class="line">  <span class="attr">zIndex:</span> <span class="string">'-1'</span>                 <span class="comment"># z-index property of the background, default: -1.</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#</span></span><br><span class="line"><span class="comment"># 2. 完成第1步，还需要提供2个js文件：canvas-nest-nomobile.min.js、canvas-nest.min.js ，</span></span><br><span class="line"><span class="comment"># 将其放到 "../themes/hexo-theme-next/source/lib/canvas-nest" 目录下，否则会报错。</span></span><br><span class="line"><span class="comment"># 参考依赖：Dependencies: https://github.com/theme-next/theme-next-canvas-nest</span></span><br><span class="line"><span class="comment">#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#</span></span><br><span class="line"><span class="string">$</span> <span class="string">git</span> <span class="string">clone</span> <span class="string">https://github.com/theme-next/theme-next-canvas-nest.git</span> <span class="string">source/lib/canvas-nest</span></span><br><span class="line"><span class="string">$</span> <span class="string">最后，重新编译部署即可：hexo</span> <span class="string">clean</span> <span class="string">&amp;&amp;</span> <span class="string">hexo</span> <span class="string">g</span> <span class="string">-d</span></span><br><span class="line"></span><br><span class="line"><span class="string">--------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 另外，还有一种方法也会使线条特效生效，但打开浏览器控制台还是提示 </span></span><br><span class="line"><span class="comment"># source/lib/canvas-nest/canvas-nest-nomobile.min.js、canvas-nest.min.js </span></span><br><span class="line"><span class="comment"># 这2个js找不到的错误。故，还是推荐上面的方法。</span></span><br><span class="line"><span class="number">1</span><span class="string">.</span> <span class="string">当前博客站点目录下，创建文件</span> <span class="string">&lt;your_hexo_blog&gt;/source/_data/footer.swig</span></span><br><span class="line"><span class="number">2</span><span class="string">.</span> <span class="string">footer.swig内容为：&lt;script</span> <span class="string">color="0,0,255"</span> <span class="string">opacity="0.5"</span> <span class="string">zIndex="-1"</span> <span class="string">count="99"</span> <span class="string">src="https://cdn.jsdelivr.net/npm/canvas-nest.js@1/dist/canvas-nest.js"&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="number">3</span><span class="string">.</span> <span class="string">在“../themes/hexo-theme-next/_config.yml”配置中找到</span> <span class="string">custom_file_path</span> <span class="string">节点，打开注释</span> <span class="string">“footer:</span> <span class="string">source/_data/footer.swig”</span> <span class="string">这一行。</span></span><br></pre></td></tr></table></figure>

<h1 id="添加站内搜索功能（searchdb）"><a href="#添加站内搜索功能（searchdb）" class="headerlink" title="添加站内搜索功能（searchdb）"></a>添加站内搜索功能（searchdb）</h1><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment">#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#</span></span><br><span class="line"><span class="comment"># 1. 安装 hexo-generator-searchdb 插件</span></span><br><span class="line"><span class="comment">#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#</span></span><br><span class="line"><span class="string">$</span> <span class="string">npm</span> <span class="string">install</span> <span class="string">-g</span> <span class="string">hexo-generator-searchdb</span> <span class="string">--save</span> <span class="comment"># 干脆全局安装吧 -g</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#</span></span><br><span class="line"><span class="comment"># 2. 博客根站点下，即 &lt;your_hexo_blog&gt;/_config.yml 配置 search：</span></span><br><span class="line"><span class="comment">#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#</span></span><br><span class="line"><span class="comment"># Search</span></span><br><span class="line"><span class="attr">search:</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">search.xml</span>    <span class="comment">#索引文件的路径，相对于站点根目录</span></span><br><span class="line">  <span class="attr">field:</span> <span class="string">post</span>         <span class="comment">#搜索范围，默认是 post，还可以选择 page、all，设置成 all 表示搜索所有页面</span></span><br><span class="line">  <span class="attr">content:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">format:</span> <span class="string">html</span></span><br><span class="line">  <span class="attr">limit:</span> <span class="number">10000</span>        <span class="comment">#限制搜索的条目数</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#</span></span><br><span class="line"><span class="comment"># 3. next主题下，即 &lt;your_hexo_blog&gt;/themes/hexo-theme-next/_config.yml 配置 Local Search：打开开关</span></span><br><span class="line"><span class="comment">#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#</span></span><br><span class="line"><span class="attr">local_search:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span>  <span class="comment"># 打开开关</span></span><br><span class="line">  <span class="comment"># If auto, trigger search by changing input.</span></span><br><span class="line">  <span class="comment"># If manual, trigger search by pressing enter key or search button.</span></span><br><span class="line">  <span class="attr">trigger:</span> <span class="string">auto</span></span><br><span class="line">  <span class="comment"># Show top n results per article, show all results by setting to -1</span></span><br><span class="line">  <span class="attr">top_n_per_article:</span> <span class="number">1</span></span><br><span class="line">  <span class="comment"># Unescape html strings to the readable one.</span></span><br><span class="line">  <span class="attr">unescape:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># Preload the search data when the page loads.</span></span><br><span class="line">  <span class="attr">preload:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#</span></span><br><span class="line"><span class="comment"># 4. 本以为到第3步就ok了，可惜还是不行。最后，还需要把 algolia_search 关掉。即 &lt;your_hexo_blog&gt;/themes/hexo-theme-next/_config.yml 配置 algolia_search：关闭它。</span></span><br><span class="line"><span class="comment"># Algolia Search</span></span><br><span class="line"><span class="comment"># For more information: https://www.algolia.com</span></span><br><span class="line"><span class="attr">algolia_search:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span>   <span class="comment"># 关闭这个</span></span><br><span class="line">  <span class="string">...</span></span><br><span class="line"><span class="comment">#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#</span></span><br><span class="line"></span><br><span class="line"><span class="string">$</span> <span class="string">最后，重新编译部署即可：hexo</span> <span class="string">clean</span> <span class="string">&amp;&amp;</span> <span class="string">hexo</span> <span class="string">g</span> <span class="string">-d</span></span><br></pre></td></tr></table></figure>

<h1 id="添加打赏功能（Reward）"><a href="#添加打赏功能（Reward）" class="headerlink" title="添加打赏功能（Reward）"></a>添加打赏功能（Reward）</h1><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment">#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#</span></span><br><span class="line"><span class="comment"># 1. 编辑主题配置文件，即：&lt;your_hexo_blog&gt;/themes/hexo-theme-next/_config.yml 。 开启赞赏功能、提供收款码图片等。</span></span><br><span class="line"><span class="comment">#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#</span></span><br><span class="line"><span class="comment"># Reward (Donate)</span></span><br><span class="line"><span class="comment"># Front-matter variable (unsupport animation).</span></span><br><span class="line"><span class="attr">reward_settings:</span></span><br><span class="line">  <span class="comment"># If true, reward will be displayed in every article by default.</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">animation:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">comment:</span> <span class="string">若对您有帮助？求鼓励，求支持！</span>   <span class="comment"># 打赏按钮上方的文字</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 注：为了隐私及通常，此处的赞赏码图片我不放在主题下的images里（hexo-next默认是这里）。</span></span><br><span class="line"><span class="comment"># 我新建 images 在根站点的 source 下，即：&lt;hexo_blog&gt;/source/images，与 _post/categories/tags/about/404 等目录平级。</span></span><br><span class="line"><span class="attr">reward:</span></span><br><span class="line">  <span class="attr">wechatpay:</span> <span class="string">../../images/private/wechatpay.png</span>   <span class="comment">#/images/wechatpay.png</span></span><br><span class="line">  <span class="attr">alipay:</span> <span class="string">../../images/private/alipay.png</span>         <span class="comment">#/images/alipay.png</span></span><br><span class="line">  <span class="comment">#paypal: /images/paypal.png</span></span><br><span class="line">  <span class="comment">#bitcoin: /images/bitcoin.png</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#</span></span><br><span class="line"><span class="comment"># 2. 修改默认“打赏”按钮文字，即：&lt;hexo_blog&gt;/themes/hexo-theme-next/languages/zh-CN.yml</span></span><br><span class="line"><span class="comment">#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#</span></span><br><span class="line"><span class="attr">reward:</span></span><br><span class="line">  <span class="attr">donate:</span> <span class="string">打赏支持</span></span><br><span class="line">  <span class="string">...</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#</span></span><br><span class="line"><span class="comment"># 3. 简单美化打赏位置，即：&lt;hexo_blog&gt;/themes/hexo-theme-next/layout/_macro/post.swig ，如：添加一个虚线分隔，或者移动赞赏区域位置。</span></span><br><span class="line"><span class="comment">#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#</span></span><br><span class="line"><span class="string">...</span></span><br><span class="line"><span class="string">&#123;%-</span> <span class="string">if</span> <span class="string">post.reward_settings.enable</span> <span class="string">%&#125;</span></span><br><span class="line">  <span class="string">&lt;hr&gt;</span></span><br><span class="line">  <span class="string">&#123;&#123;</span> <span class="string">partial('_partials/post/post-reward.swig')</span> <span class="string">&#125;&#125;</span></span><br><span class="line">  <span class="string">&lt;hr&gt;</span></span><br><span class="line"><span class="string">&#123;%-</span> <span class="string">endif</span> <span class="string">%&#125;</span></span><br><span class="line"><span class="string">...</span></span><br></pre></td></tr></table></figure>

<hr>
<h1 id="Front-Matter-系列使用指南"><a href="#Front-Matter-系列使用指南" class="headerlink" title="Front-Matter 系列使用指南"></a>Front-Matter 系列使用指南</h1><p>通常，文章开头的 <code>fron-matter模板</code> 示例为：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: 标题</span><br><span class="line">subtitle: 子标题</span><br><span class="line">date: 2020-05-17 01:07:05</span><br><span class="line">top: 100  #文章置顶权重，越大越靠前。不填写，默认通过创建时间倒序</span><br><span class="line">categories:</span><br><span class="line"><span class="bullet">- </span>[分类1,1子类A]</span><br><span class="line"><span class="bullet">- </span>[分类1,1子类B]</span><br><span class="line"><span class="bullet">- </span>[分类2,2子类A]</span><br><span class="line"><span class="bullet">- </span>[分类2,2子类B]</span><br><span class="line"><span class="bullet">- </span>[分类2,2子类C]</span><br><span class="line"><span class="bullet">- </span>分类3</span><br><span class="line">keywords: [关键字1,关键字2,关键字N...]</span><br><span class="line">tags:</span><br><span class="line"><span class="bullet">- </span>[标签1]</span><br><span class="line"><span class="bullet">- </span>[标签2]</span><br><span class="line"><span class="bullet">- </span>[标签N...]</span><br><span class="line">comments: true</span><br><span class="line">---</span><br></pre></td></tr></table></figure>

<h2 id="categories（分类）"><a href="#categories（分类）" class="headerlink" title="categories（分类）"></a>categories（分类）</h2><p>Hexo+next 默认不支持多级分类，但可以通过 <code>[a,b,c,...]</code> 或 <code>- - 空格缩进</code> 2种形式来实现分类层级。</p>
<ul>
<li><p><strong>☞格式1：</strong></p>
<blockquote>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">categories:</span><br><span class="line">- [父分类<span class="number">1</span>,父分类<span class="number">1</span>的子分类<span class="number">1</span>]</span><br><span class="line">- [父分类<span class="number">1</span>,父分类<span class="number">1</span>的子分类<span class="number">2</span>]</span><br><span class="line">- [父分类<span class="number">2</span>,父分类<span class="number">2</span>的子分类<span class="number">1</span>]</span><br><span class="line">- [父分类<span class="number">2</span>,父分类<span class="number">2</span>的子分类<span class="number">2</span>]</span><br><span class="line">- 分类<span class="number">3</span></span><br></pre></td></tr></table></figure>
</blockquote>
</li>
<li><p><strong>☞格式2：</strong></p>
<blockquote>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">categories:</span><br><span class="line">- - 父分类<span class="number">1</span></span><br><span class="line">  - 父分类<span class="number">1</span>的子分类<span class="number">1</span></span><br><span class="line">  - 父分类<span class="number">1</span>的子分类<span class="number">2</span></span><br><span class="line">- - 父分类<span class="number">2</span></span><br><span class="line">  - 父分类<span class="number">2</span>的子分类<span class="number">1</span></span><br><span class="line">  - 父分类<span class="number">2</span>的子分类<span class="number">2</span></span><br><span class="line">- - 分类<span class="number">3</span></span><br></pre></td></tr></table></figure>
</blockquote>
</li>
</ul>
<h2 id="tags（标签）"><a href="#tags（标签）" class="headerlink" title="tags（标签）"></a>tags（标签）</h2><ul>
<li><p><strong>☞格式1：</strong></p>
<blockquote>
<figure class="highlight subunit"><table><tr><td class="code"><pre><span class="line"><span class="keyword">tags:</span></span><br><span class="line">- [标签1]</span><br><span class="line">- [标签2]</span><br><span class="line">- [标签N...]</span><br></pre></td></tr></table></figure>
</blockquote>
</li>
<li><p><strong>☞格式2：</strong></p>
<blockquote>
<figure class="highlight subunit"><table><tr><td class="code"><pre><span class="line"><span class="keyword">tags:</span></span><br><span class="line">- - 标签1</span><br><span class="line">- - 标签2</span><br><span class="line">- - 标签N...</span><br></pre></td></tr></table></figure>
</blockquote>
</li>
</ul>
<h2 id="scaffolds（模板）"><a href="#scaffolds（模板）" class="headerlink" title="scaffolds（模板）"></a>scaffolds（模板）</h2><ul>
<li><p><code>draft.md</code>：对应 <code>hexo new draft &#39;NewDraftName&#39; &gt; ./source/NewDraftName/index.md</code>    </p>
<blockquote>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="section">#模板填充例如：</span></span><br><span class="line">---</span><br><span class="line">title: &#123;&#123; title &#125;&#125;</span><br><span class="line">tags:</span><br><span class="line">---</span><br></pre></td></tr></table></figure>
</blockquote>
</li>
<li><p><code>page.md</code>：对应 <code>hexo new page &#39;NewPageName&#39; &gt; ./source/NewPageName/index.md</code></p>
<blockquote>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="section">#模板填充例如：</span></span><br><span class="line">---</span><br><span class="line">title: &#123;&#123; title &#125;&#125;      #标题</span><br><span class="line">date: &#123;&#123; date &#125;&#125;        #创建日期时间</span><br><span class="line">comments: false         #禁止评论</span><br><span class="line">---</span><br></pre></td></tr></table></figure>
</blockquote>
</li>
<li><p><code>post.md</code>：对应 <code>hexo new &#39;NewPostName&#39; &gt; ./source/_post/NewPostName.md</code></p>
<blockquote>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="section">#模板填充例如：</span></span><br><span class="line">---</span><br><span class="line">title: &#123;&#123; title &#125;&#125;</span><br><span class="line">date: &#123;&#123; date &#125;&#125;</span><br><span class="line">comments: true</span><br><span class="line">categories: </span><br><span class="line"><span class="bullet">- </span>[cat1,cat1-1]</span><br><span class="line"><span class="bullet">- </span>[cat2]</span><br><span class="line"><span class="section">#keywords: [关键字1,关键字2]</span></span><br><span class="line"><span class="section">#top: 10000 #置顶权重</span></span><br><span class="line">tags: </span><br><span class="line"><span class="bullet">- </span>[tag1] </span><br><span class="line"><span class="bullet">- </span>[tag2] </span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">摘要....</span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- more --&gt;</span></span></span><br><span class="line"></span><br><span class="line">正文...</span><br></pre></td></tr></table></figure>
</blockquote>
</li>
</ul>
<h1 id="hexo-内置标签插件"><a href="#hexo-内置标签插件" class="headerlink" title="hexo 内置标签插件"></a>hexo 内置标签插件</h1><h2 id="如何引用站内文章？（pos-link）"><a href="#如何引用站内文章？（pos-link）" class="headerlink" title="如何引用站内文章？（pos_link）"></a>如何引用站内文章？（pos_link）</h2><p>在 hexo-markdown 中如何引用站内文章，使用内置的标签插件 <code>post_link</code> 实现：</p>
<blockquote>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">语法：</span><br><span class="line">&#123;% post_link 文章文件名（不要后缀） 文章标题（可选，默认使用引用文章title） %&#125;</span><br><span class="line"></span><br><span class="line">示例：</span><br><span class="line">&#123;% post_link dev-tools/hexo/How-To-Config %&#125;</span><br><span class="line">&#123;% post_link dev-tools/hexo/How-To-Config 《嘿嘿，引用名字我修改了》%&#125;</span><br></pre></td></tr></table></figure></blockquote>
]]></content>
      <categories>
        <category>技术篇</category>
        <category>工具指南</category>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>个性化</tag>
        <tag>美化</tag>
      </tags>
  </entry>
  <entry>
    <title>快速搭建 Hexo+Github/Gitee 个人博客（入门篇1）</title>
    <url>/dev-tools/hexo/Setup-Tutorial/</url>
    <content><![CDATA[<p>如今各类博客系统一大堆，所谓萝卜白菜各有所爱。由于个人看重 hexo 的简洁性和免费托管 <a href="https://github.com/" target="_blank" rel="noopener">Github</a>/<a href="https://gitee.com/" target="_blank" rel="noopener">Gitee</a> 的原因，将决定折腾学习 hexo，以便后期学写技术博客、备忘笔记、和记录生活点滴。废话不多说，基于网上学习教程，个人做了如下总结。</p>
<a id="more"></a>

<!-- [toc] -->

<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul>
<li><a href="https://hexo.io/zh-cn/" target="_blank" rel="noopener">Hexo官网</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/60578464" target="_blank" rel="noopener">使用 Hexo+GitHub 搭建个人免费博客教程（小白向）</a></li>
<li><a href="https://www.jianshu.com/p/8681ab76da08" target="_blank" rel="noopener">用hexo+github搭建属于自己的博客</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/136552969" target="_blank" rel="noopener">部署Hexo踩过的坑—node14.0配置hexo</a></li>
<li><a href="https://segmentfault.com/a/1190000002632530" target="_blank" rel="noopener">hexo常用命令笔记</a></li>
<li><a href="https://hexo.io/docs/one-command-deployment" target="_blank" rel="noopener">One-Command Deployment</a></li>
<li><a href="https://blog.csdn.net/weixin_45667885/article/details/101084532" target="_blank" rel="noopener">Hexo同时部署在GitHub、Coding、Gitee</a></li>
<li><a href="https://gavincrown.gitee.io/2020/07/06/Hexo%E5%8D%9A%E5%AE%A2%E9%83%A8%E7%BD%B2%E5%88%B0Github%E5%92%8CGitee/" target="_blank" rel="noopener">Hexo博客部署到GitHub和Gitee</a></li>
</ul>
<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>越来越多的人使用 GitHub/Gitee Pages 来搭建 Hexo 静态博客网站，其最吸引人的莫过于完全免费使用，并且非常稳定。</p>
<p>虽然搭建时比较麻烦，有点折腾，但是配置完成后，基本不需要操心维护的事，甚至放了几年都忘记了，打开来看文章依然还在。</p>
<p>本文就详细介绍下如何使用 Hexo + GitHub/Gitee 搭建免费个人博客网站的教程。</p>
<p><em>PS：Github 和 Gitee 基本类似，主要区别为 Gitee 为国内开发，服务器在国内相比较访问比较快速，所以本篇讲解如何同时部署 hexo 到 Github/Gitee。</em></p>
<hr>
<p>开始前，再介绍一下：</p>
<ul>
<li><h2 id="GitHub-Gitee-Pages-是什么？"><a href="#GitHub-Gitee-Pages-是什么？" class="headerlink" title="GitHub/Gitee Pages 是什么？"></a><a href="https://help.github.com/en/github/working-with-github-pages/about-github-pages" target="_blank" rel="noopener">GitHub/Gitee Pages 是什么？</a></h2><p>  GitHub Pages 是由 GitHub 官方提供的一种免费的静态站点托管服务，让我们可以在 GitHub 仓库里托管和发布自己的静态网站页面。同理，Gitee Pages 是 Gitee 官方主的托管服务。</p>
</li>
<li><h2 id="Hexo-是什么？"><a href="#Hexo-是什么？" class="headerlink" title="Hexo 是什么？"></a><a href="https://hexo.io/zh-cn/" target="_blank" rel="noopener">Hexo 是什么？</a></h2><p>  Hexo 是一个快速、简洁且高效的静态博客框架，它基于 Node.js 运行，可以将我们撰写的 Markdown 文档解析渲染成静态的 HTML 网页。</p>
</li>
<li><h2 id="Hexo-GitHub-Gitee-文章发布原理"><a href="#Hexo-GitHub-Gitee-文章发布原理" class="headerlink" title="Hexo + GitHub/Gitee 文章发布原理"></a>Hexo + GitHub/Gitee 文章发布原理</h2><p>  在本地撰写 Markdown 格式文章后，通过 Hexo 解析文档，渲染生成具有主题样式的 HTML 静态网页，再推送到 GitHub/Gitee 上完成博文的发布。</p>
</li>
</ul>
<figure class="highlight coq"><table><tr><td class="code"><pre><span class="line">graph LR</span><br><span class="line">A(撰写文章.md) --&gt; |<span class="type">hexo</span> g| <span class="type">B</span>(Hexo生成静态网页)</span><br><span class="line">B --&gt; |<span class="type">hexo</span> d| <span class="type">C</span>(部署到Github Pages)</span><br><span class="line">C --&gt; |<span class="type">访客| D</span>(该博客首页xxx.github.io)</span><br></pre></td></tr></table></figure>

<p><img src="http://pic3.zhimg.com/80/v2-a193a47cf70fe6ecf156e5f3d34920ea_1440w.jpg" alt=""></p>
<ul>
<li><h2 id="优缺点"><a href="#优缺点" class="headerlink" title="优缺点"></a>优缺点</h2><p>  <strong>优点</strong>：免费托管在 GitHub/Gitee，安全省心；静态站点，轻量快速；可自由定制；迁移方便……</p>
<p>  <strong>不足</strong>：发文不便，依赖于本地环境；更适合个人博客使用；GitHub 在国内访问速度有点不快。</p>
</li>
<li><h2 id="托管与博客地址一览表"><a href="#托管与博客地址一览表" class="headerlink" title="托管与博客地址一览表"></a>托管与博客地址一览表</h2><table>
<thead>
<tr>
<th align="center">托管平台</th>
<th align="center">访问博客地址格式</th>
<th align="center">示例</th>
<th align="center">备注</th>
</tr>
</thead>
<tbody><tr>
<td align="center"><a href="https://github.com" target="_blank" rel="noopener">https://github.com</a></td>
<td align="center">https://用户名.github.io</td>
<td align="center"><a href="https://jiyiqini.github.io" target="_blank" rel="noopener">https://jiyiqini.github.io</a></td>
<td align="center">国内访问慢</td>
</tr>
<tr>
<td align="center"><a href="https://gitee.com" target="_blank" rel="noopener">https://gitee.com</a></td>
<td align="center">https://用户名.gitee.io</td>
<td align="center"><a href="https://jiyiqini.gitee.io" target="_blank" rel="noopener">https://jiyiqini.gitee.io</a></td>
<td align="center">国内访问快</td>
</tr>
</tbody></table>
</li>
</ul>
<h1 id="博客搭建"><a href="#博客搭建" class="headerlink" title="博客搭建"></a>博客搭建</h1><p>由于 Hexo 基于 Node.js，搭建过程中还需要使用 npm（Node.js 已带） 和 git，因此先搭建本地操作环境，安装 Node.js 和 Git。</p>
<ul>
<li>Node.js：<a href="https://nodejs.org/zh-cn" target="_blank" rel="noopener">https://nodejs.org/zh-cn</a></li>
<li>Git：<a href="https://git-scm.com/downloads" target="_blank" rel="noopener">https://git-scm.com/downloads</a></li>
</ul>
<p>下载 Node.js 和 Git 程序并安装，一路点 “下一步” 按默认配置完成安装。</p>
<p>安装完成后，打开 ternimal，依次输入 <code>node -v、npm -v、 git --version</code> 并回车，出现程序版本号即可。</p>
<h2 id="1-搭建环境"><a href="#1-搭建环境" class="headerlink" title="1. 搭建环境"></a>1. 搭建环境</h2><ul>
<li><h3 id="安装-git"><a href="#安装-git" class="headerlink" title="安装 git"></a>安装 git</h3>  忽略。具体请下载安装包或终端命令安装均可。</li>
<li><h3 id="安装-node-js"><a href="#安装-node-js" class="headerlink" title="安装 node.js"></a>安装 node.js</h3>  忽略。具体请下载安装包或终端命令安装均可。</li>
<li><h3 id="申请-github、gitee-账号"><a href="#申请-github、gitee-账号" class="headerlink" title="申请 github、gitee 账号"></a>申请 github、gitee 账号</h3>  忽略。本文着重讲解hexo，请自行网上查阅。</li>
<li><h3 id="安装-hexo"><a href="#安装-hexo" class="headerlink" title="安装 hexo"></a>安装 hexo</h3>  具体过程请看如下。</li>
</ul>
<h2 id="2-连接-github-gitee-与-SSH-key"><a href="#2-连接-github-gitee-与-SSH-key" class="headerlink" title="2. 连接 github/gitee 与 SSH-key"></a>2. 连接 github/gitee 与 SSH-key</h2><h3 id="Step1：SSH-key（方便多环境管理不同SSH-Key，此处以配置多个ssk-key为例）"><a href="#Step1：SSH-key（方便多环境管理不同SSH-Key，此处以配置多个ssk-key为例）" class="headerlink" title="Step1：SSH-key（方便多环境管理不同SSH-Key，此处以配置多个ssk-key为例）"></a>Step1：SSH-key（方便多环境管理不同SSH-Key，此处以配置多个ssk-key为例）</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">1，分别生成不同使用环境的SSH-Key：</span><br><span class="line"></span><br><span class="line"><span class="comment"># 例1，生成 github、gitgee 使用的 ssh-key，并单独命名管理为 github_id_rsa</span></span><br><span class="line"><span class="comment"># 例2，生成 公司(例如：gitlab) 使用的 ssh-key，并单独命名管理为 gitlab_id_rsa</span></span><br><span class="line">$ ssh-keygen -t rsa -C <span class="string">"your_email@your_github.com"</span> -f ~/.ssh/github_id_rsa</span><br><span class="line">$ ssh-keygen -t rsa -C <span class="string">"your_email@your_gitee.com"</span>  -f ~/.ssh/gitee_id_rsa</span><br><span class="line">$ ssh-keygen -t rsa -C <span class="string">"your_email@your_gitlab.com"</span> -f ~/.ssh/gitlab_id_rsa</span><br><span class="line">$ ...</span><br><span class="line"></span><br><span class="line">最终，在 ~/.ssh/ 目录会生成 私钥和公钥（分别为：github_id_rsa/github_id_rsa.pub、gitee_id_rsa/gitee_id_rsa.pub、gitlab_id_rsa/gitlab_id_rsa.pub）。然后，我们将公钥中的内容粘帖到各自服务器的 SSH-key 的配置中即可。</span><br><span class="line"></span><br><span class="line">2，添加私钥：</span><br><span class="line"></span><br><span class="line">$ ssh-add ~/.ssh/github_id_rsa  <span class="comment">#输出例如：Identity added: id_rsa (sh14****60@163)</span></span><br><span class="line">$ ssh-add ~/.ssh/gitee_id_rsa   <span class="comment">#输出例如：Identity added: id_rsa (sh14****60@163)</span></span><br><span class="line">$ ssh-add ~/.ssh/gitlab_id_rsa  <span class="comment">#输出例如：Identity added: github_id_rsa (sh14****60@163)</span></span><br><span class="line">$ ...</span><br><span class="line"></span><br><span class="line">如果执行ssh-add时提示<span class="string">"Could not open a connection to your authentication agent"</span>，可以现执行命令：</span><br><span class="line"></span><br><span class="line">$ ssh-agent bash</span><br><span class="line"></span><br><span class="line">然后，再运行ssh-add命令：</span><br><span class="line"></span><br><span class="line"><span class="comment"># 可以通过 ssh-add -l 来显示私钥列表</span></span><br><span class="line">$ ssh-add -l</span><br><span class="line"><span class="comment"># 输出（对应ssh-add添加的密钥），例如：</span></span><br><span class="line"><span class="comment"># 3072 SHA256:IFMBBfvZvSb1+Gmrs******9HaY2f5x******Sw+atVY sh14****60@163.com (RSA)</span></span><br><span class="line"><span class="comment"># 3072 SHA256:IFMBBfvZvF+d+Bgtf******9HaY2f5x******BstddYZ sh14****60@163.com (RSA)</span></span><br><span class="line"><span class="comment"># 3072 SHA256:Z65IEans5+7mZ5Fj8******lbYa2Qk******UP54oUeE sh14****60@163.com (RSA)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 可以通过 ssh-add -D 来清空私钥列表</span></span><br><span class="line">$ ssh-add -D</span><br><span class="line"></span><br><span class="line">ssh-add命令是把专用密钥添加到ssh-agent的高速缓存中。该命令位置在/usr/bin/ssh-add，参数选项有：</span><br><span class="line"></span><br><span class="line">-D：删除ssh-agent中的所有密钥. </span><br><span class="line">-d：从ssh-agent中的删除密钥 </span><br><span class="line">-e pkcs11：删除PKCS<span class="comment">#11共享库pkcs1提供的钥匙。 </span></span><br><span class="line">-s pkcs11：添加PKCS<span class="comment">#11共享库pkcs1提供的钥匙。 </span></span><br><span class="line">-L：显示ssh-agent中的公钥 </span><br><span class="line">-l：显示ssh-agent中的密钥 </span><br><span class="line">-t life：对加载的密钥设置超时时间，超时ssh-agent将自动卸载密钥 -X：对ssh-agent进行解锁 </span><br><span class="line">-x：对ssh-agent进行加锁</span><br><span class="line"></span><br><span class="line">3，创建并修改config配置文件：</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在 ~/.ssh 目录下新建一个 config 文件：</span></span><br><span class="line">$ touch config</span><br><span class="line"></span><br><span class="line">添加内容：</span><br><span class="line"></span><br><span class="line"><span class="comment"># github</span></span><br><span class="line">Host github.com</span><br><span class="line">    HostName github.com</span><br><span class="line">    PreferredAuthentications publickey</span><br><span class="line">    IdentityFile ~/.ssh/github_id_rsa</span><br><span class="line"></span><br><span class="line"><span class="comment"># gitee</span></span><br><span class="line">Host gitee.com</span><br><span class="line">    HostName gitee.com</span><br><span class="line">    PreferredAuthentications publickey</span><br><span class="line">    IdentityFile ~/.ssh/gitee_id_rsa</span><br><span class="line"></span><br><span class="line"><span class="comment"># gitlab</span></span><br><span class="line">Host gitlab.com</span><br><span class="line">    HostName gitlab.com <span class="comment">#这里填你们公司的git网址即可</span></span><br><span class="line">    PreferredAuthentications publickey</span><br><span class="line">    IdentityFile ~/.ssh/gitlab_id_rsa</span><br><span class="line"></span><br><span class="line"><span class="comment"># 更多ssh-key添加...</span></span><br><span class="line"></span><br><span class="line">4，测试：</span><br><span class="line"></span><br><span class="line">$ ssh -T git@github.com</span><br><span class="line">$ ssh -T git@gitee.com</span><br><span class="line"></span><br><span class="line"><span class="comment"># 若出错的话，别急！通过debug来查看解决吧。(其中-v 是输出编译信息，然后根据编译信息自己去解决问题吧)：</span></span><br><span class="line">$ ssh -vT git@github.com</span><br><span class="line"></span><br><span class="line">若输出：  </span><br><span class="line"></span><br><span class="line">Hi &lt;your_ssh_user_name&gt;! You<span class="string">'ve successfully authenticated, but &lt;GitHub|GITEE.COM|...&gt; does not provide shell access.  </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">则表示成功的连上 github 了。也可以试试链接公司的 gitlab 。这样，就可以在不同的仓库，用不同的账号登录了~~~</span></span><br></pre></td></tr></table></figure>

<h3 id="Step2：在托管平台上添加公钥授权："><a href="#Step2：在托管平台上添加公钥授权：" class="headerlink" title="Step2：在托管平台上添加公钥授权："></a>Step2：在托管平台上添加公钥授权：</h3><ul>
<li><p>Github 添加公钥授权：</p>
  <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">1，Github -&gt; Settings -&gt; SSH and GPG keys</span><br><span class="line">2，SSH keys选项 -&gt; New SSH key。</span><br><span class="line">3，Title：随便取个名字即可，如：SSH-key_myGithub。</span><br><span class="line">4，Key：将之前创建的 github 公钥（即 github_id_rsa.pub）里的内容，全复制粘贴进去。</span><br><span class="line">5，点击“Add SSH key”，保存。</span><br></pre></td></tr></table></figure>
</li>
<li><p>Gitee 添加公钥授权：</p>
  <figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span>，Gitee -&gt; 设置 -&gt; 安全设置#SSH公钥。</span><br><span class="line"><span class="number">2</span>，SSH公钥 -&gt; 添加公钥。</span><br><span class="line"><span class="number">3</span>，标题：随便取个名字即可。如：SSH-key_myGitee。</span><br><span class="line"><span class="number">4</span>，公钥：将之前创建的 gitee 公钥（即 gitee_id_rsa.pub）里的内容，全复制粘贴进去。</span><br><span class="line"><span class="number">5</span>，点击“确定”，保存。</span><br></pre></td></tr></table></figure>

</li>
</ul>
<h3 id="Step3：验证连接"><a href="#Step3：验证连接" class="headerlink" title="Step3：验证连接"></a>Step3：验证连接</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">1，进入终端。</span><br><span class="line">2，输入命令：ssh -T git@github.com <span class="comment"># gitee：ssh -T git@gitee.com</span></span><br><span class="line">3，若出现 “Are you sure……”，输入 yes 回车确认。</span><br><span class="line">4，最后输出 “Hi &lt;your_ssh_user_name&gt;! You<span class="string">'ve successfully authenticated, but &lt;GitHub|GITEE.COM&gt; does not provide shell access.  ”，表示成功连接。</span></span><br></pre></td></tr></table></figure>

<h2 id="3-创建-Github-Gitee-Pages-仓库"><a href="#3-创建-Github-Gitee-Pages-仓库" class="headerlink" title="3. 创建 Github/Gitee Pages 仓库"></a>3. 创建 Github/Gitee Pages 仓库</h2><h3 id="Github-Pages-仓库"><a href="#Github-Pages-仓库" class="headerlink" title="Github Pages 仓库"></a>Github Pages 仓库</h3><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span>，GitHub 主页右上角加号 -&gt; New repository。</span><br><span class="line"><span class="number">2</span>，Repository name 中输入“用户名.github.io”。</span><br><span class="line"><span class="number">3</span>，勾选 Public。必须 Public 才能使用。 </span><br><span class="line"><span class="number">4</span>，勾选 “Initialize <span class="keyword">this</span> repository with a README”。</span><br><span class="line"><span class="number">5</span>，填好后点击 Create repository 创建。</span><br><span class="line"><span class="number">6</span>，创建后默认自动启用 HTTPS，博客地址为：https:<span class="comment">//用户名.github.io。</span></span><br></pre></td></tr></table></figure>

<p>例如，我的博客：<a href="https://jiyiqini.github.io" target="_blank" rel="noopener">https://jiyiqini.github.io</a></p>
<h3 id="Gitee-Pages-仓库"><a href="#Gitee-Pages-仓库" class="headerlink" title="Gitee Pages 仓库"></a>Gitee Pages 仓库</h3><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span>，Gitee 主页右上角加号 -&gt; 新建仓库。</span><br><span class="line"><span class="number">2</span>，仓库名称中输入“用户名”。</span><br><span class="line"><span class="number">3</span>，勾选“开源”或“私有”均可。对于个人博客嘛，私有吧。</span><br><span class="line"><span class="number">4</span>，勾选“初始化仓库”，其它看情况可选（如：设置模板、选择分支模型）。</span><br><span class="line"><span class="number">5</span>，创建完成后，点击该仓库的 “服务” -&gt; Gitee Pages &gt; 勾选“强制使用HTTPS” -&gt; 启动。博客地址为：https:<span class="comment">//用户名.gitee.io。</span></span><br></pre></td></tr></table></figure>

<p>例如，我的博客：<a href="https://jiyiqini.gitee.io" target="_blank" rel="noopener">https://jiyiqini.gitee.io</a></p>
<p><strong>注意事项：</strong></p>
<ul>
<li>Github repo 权限只能为 public ，而 Gitee repo 权限可以是 public、也可是 private。</li>
<li>Github 的 repo name 必须为 <code>“用户名.github.io”</code> 格式，从而博客访问地址为：<code>https://用户名.github.io</code>；而 Gitee 的 repo name 任意。一般与用户名一致，这样博客地址就比较简洁，形如：<code>https://用户名.gitee.io</code>。若 repo name 不保持与用户一致，则需要有二级目录方可访问，如：<code>https://用户名.gitee.io/仓库名</code>。</li>
<li>Github 创建好仓库，默认为 <code>HTTPS</code> ，而 Gitee 需要去手动开启！</li>
</ul>
<h2 id="4-Hexo博客系统接入（核心）"><a href="#4-Hexo博客系统接入（核心）" class="headerlink" title="4. Hexo博客系统接入（核心）"></a>4. Hexo博客系统接入（核心）</h2><h3 id="hexo-安装与基本使用"><a href="#hexo-安装与基本使用" class="headerlink" title="hexo 安装与基本使用"></a>hexo 安装与基本使用</h3><p>☞ <a href="https://hexo.io/zh-cn/" target="_blank" rel="noopener">Hexo</a>官方步骤参考：</p>
<blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ npm install hexo-cli -g</span><br><span class="line">$ hexo init blog</span><br><span class="line">$ <span class="built_in">cd</span> blog</span><br><span class="line">$ npm install</span><br><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>
</blockquote>
<p>☞ Hexo 博客文件夹目录结构概览（<a href="https://hexo.io/zh-cn/docs/setup" target="_blank" rel="noopener">更多详情</a>）：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">.</span><br><span class="line">├── _config.yml         <span class="comment">#网点的配置信息</span></span><br><span class="line">├── db.json             <span class="comment">#缓存文件</span></span><br><span class="line">├── node_modules        <span class="comment">#安装的插件以及hexo所需的一些node.js模块。</span></span><br><span class="line">├── package-lock.json   <span class="comment">#应用程序的信息</span></span><br><span class="line">├── package.json        <span class="comment">#应用程序信息，配置hexo运行需要的js包。</span></span><br><span class="line">├── public              <span class="comment">#最终所见网页的所有内容</span></span><br><span class="line">├── scaffolds           <span class="comment">#模版文件夹。当您新建文章时，Hexo会根据scaffold来建立文件。Hexo的模板是指在新建的文章文件中默认填充的内容。例如，如果您修改scaffold/post.md中的Front-matter内容，那么每次新建一篇文章时都会包含这个修改。</span></span><br><span class="line">│   ├── draft.md</span><br><span class="line">│   ├── page.md</span><br><span class="line">│   └── post.md</span><br><span class="line">├── <span class="built_in">source</span>              <span class="comment">#存放用户资源，md等文档。除 _posts 文件夹之外，开头命名为 _ (下划线)的文件 / 文件夹和隐藏的文件将会被忽略。Markdown和HTML 文件会被解析并放到 public 文件夹，而其他文件会被拷贝过去。</span></span><br><span class="line">│   └── _posts</span><br><span class="line">└── themes              <span class="comment">#主题 文件夹。Hexo 会根据主题来生成静态页面。</span></span><br></pre></td></tr></table></figure>

<p><strong><em>具体个人搭建步骤：</em></strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># ********** 1，npm安装hexo博客程序：</span></span><br><span class="line">$ sudo npm install -g hexo-cli</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># ********** 2，hexo初始化及相关依赖：</span></span><br><span class="line"><span class="comment"># 假设，我的博客放在： ~/MyBlogs/Hexo-Blogs</span></span><br><span class="line">$ <span class="built_in">cd</span> ~/MyBlogs/Hexo-Blogs <span class="comment">#进入存放hexo博客程序的目标目录</span></span><br><span class="line">$ hexo init     <span class="comment">#初始化。亦可：进入上一级目录~/MyBlogs下，再直接 hexo init Hexo-Blogs。</span></span><br><span class="line">$ npm install   <span class="comment">#安装依赖组件</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># ********** 3，生成与预览：</span></span><br><span class="line">$ hexo g    <span class="comment">#生成静态页面。或hexo generate</span></span><br><span class="line">$ hexo s    <span class="comment">#启动本地预览。或hexo server</span></span><br><span class="line"><span class="comment"># 浏览器打开终端提示的url：http://localhost:4000。若出现默认的hexo页面，表示本地博客成功。</span></span><br><span class="line"><span class="comment"># Tips：如果出现页面加载不出来，可能是端口被占用了。Ctrl+C 关闭服务器，运行 hexo server -p 5000 更改端口号后重试。</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ********** 4，部署 Hexo 到 GitHub Pages</span></span><br><span class="line"><span class="comment"># 本地博客测试成功后，就是上传到 GitHub 进行部署，使其能够在网络上访问。</span></span><br><span class="line">$ npm install hexo-deployer-git --save <span class="comment">#安装 hexo-deployer-git。否则可能会出错“error deployer not found:git/github”</span></span><br><span class="line">$ 修改 ../&#123;your_hexo_blog&#125;/_config.yml<span class="variable">$deploy</span> 中 Deployment 部分并保存：</span><br><span class="line">    <span class="comment"># Deployment</span></span><br><span class="line">    <span class="comment">## Docs: https://hexo.io/docs/deployment.html</span></span><br><span class="line">    deploy:</span><br><span class="line">      <span class="built_in">type</span>: git</span><br><span class="line">      repo: https://github.com/&#123;用户名&#125;/&#123;用户名&#125;.github.io.git</span><br><span class="line">      branch: master</span><br><span class="line">$ hexo d <span class="comment">#发布网点到 Github Pages</span></span><br><span class="line">$ 浏览器访问 https://用户名.github.io，结束. <span class="comment">#注意：第一次发布可能会有10分钟的延迟，在这期间可能看到的是空白页面。</span></span><br></pre></td></tr></table></figure>

<p>☞ ==<strong><em>每次修改完本地的文件后必须执行以下命令，以重新部署Github Pages：</em></strong>==</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo clean              <span class="comment">#清除缓存</span></span><br><span class="line">hexo g 或 hexo generate <span class="comment">#生成静态页面</span></span><br><span class="line">hexo d 或 deploy        <span class="comment">#部署发布。发布前本地检查预览下：hexo s -&gt; http://localhost:4000</span></span><br></pre></td></tr></table></figure>

<h3 id="hexo-同时部署-Github-Gitee-Pages"><a href="#hexo-同时部署-Github-Gitee-Pages" class="headerlink" title="hexo 同时部署 Github/Gitee Pages"></a>hexo 同时部署 Github/Gitee Pages</h3><p>即，在您的博客根目录下，编辑 <code>_config.yml</code> 配置文件，设置 deploy，如：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/deployment.html</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="comment"># 单平台部署，不用 - 分栏配置亦可以，直接如下：</span></span><br><span class="line">  <span class="comment"># ref: https://hexo.io/docs/one-command-deployment</span></span><br><span class="line">  <span class="comment"># type: git</span></span><br><span class="line">  <span class="comment"># repo: https://github.com/用户名/用户名.github.io.git</span></span><br><span class="line">  <span class="comment"># #repo: https://gitee.com/用户名/用户名.git</span></span><br><span class="line">  <span class="comment"># branch: master</span></span><br><span class="line">  </span><br><span class="line">  <span class="comment"># 如果为多平台部署，请用 - 分栏配置：</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">git@github.com:用户名/用户名.github.io.git</span> <span class="comment">#或 https://github.com/用户名/用户名.github.io.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">master</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">type:</span> <span class="string">git</span> </span><br><span class="line">  <span class="attr">repo:</span> <span class="string">git@gitee.com:用户名/用户名.git</span> <span class="comment">#或 https://gitee.com/用户名/用户名.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure>

<p><strong>注意事项：Github Pages 部署后，支持自动更新，无需额外操作，稍等一小会就可访问了，因 Github 服务器在国外。而 Gitee Pages 则不一样，部署后，不支持自动更新，需要手动去点击更新后才可以访问。</strong></p>
<h3 id="最后，一键部署。"><a href="#最后，一键部署。" class="headerlink" title="最后，一键部署。"></a>最后，一键部署。</h3><p>通常，我比较喜欢使用一键操作：</p>
<blockquote>
<p><code>hexo clean &amp;&amp; hexo g -d</code></p>
</blockquote>
<h1 id="Hexo常用命令"><a href="#Hexo常用命令" class="headerlink" title="Hexo常用命令"></a>Hexo常用命令</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 基本常用</span></span><br><span class="line">hexo [-]h|<span class="built_in">help</span>              <span class="comment">#查看帮助</span></span><br><span class="line">hexo [-]v|version           <span class="comment">#查看 hexo 的版本，包括 hexo 所依赖的组件正在使用的版本，如：node、v8……</span></span><br><span class="line"></span><br><span class="line">hexo n/new <span class="string">"postName"</span>       <span class="comment">#新建文章。在source下会生成一个“postName.md”，打开开始写文章即可~</span></span><br><span class="line">hexo n/new page <span class="string">"pageName"</span>  <span class="comment">#新建页面</span></span><br><span class="line"></span><br><span class="line">hexo g/generate             <span class="comment">#生成静态页面至public目录</span></span><br><span class="line">hexo s/server               <span class="comment">#开启预览访问端口（默认端口4000，'ctrl + c'关闭server）</span></span><br><span class="line">hexo d/deploy               <span class="comment">#将.deploy目录部署到GitHub</span></span><br><span class="line">hexo p/publish [layout] &lt;filename&gt;  <span class="comment">#发表草稿</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 完成后部署</span></span><br><span class="line"><span class="comment"># 两个命令的作用是相同的（--deploy全名等价于-简写）</span></span><br><span class="line">hexo deploy --generate 或 hexo generate --deploy</span><br><span class="line"><span class="comment">#简写即为：</span></span><br><span class="line">hexo g -d 或 hexo d -g  <span class="comment">#生成后并部署（g和d顺序可交换）</span></span><br><span class="line">hexo g -d -m <span class="string">'message'</span>  <span class="comment">#生成后并部署带git-commit message</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 服务器</span></span><br><span class="line">hexo s/server                   <span class="comment">#Hexo 会监视文件变动并自动更新，您无须重启服务器。</span></span><br><span class="line">hexo s/server -s                <span class="comment">#静态模式</span></span><br><span class="line">hexo s/server -p 5000           <span class="comment">#更改端口为5000</span></span><br><span class="line">hexo s/server -i 192.168.1.1    <span class="comment">#自定义 IP</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 监视文件变动</span></span><br><span class="line">hexo generate               <span class="comment">#使用 Hexo 生成静态文件快速而且简单</span></span><br><span class="line">hexo generate --watch       <span class="comment">#监视文件变动</span></span><br></pre></td></tr></table></figure>

<h1 id="Hexo个性化设置（基础入门）"><a href="#Hexo个性化设置（基础入门）" class="headerlink" title="Hexo个性化设置（基础入门）"></a>Hexo个性化设置（基础入门）</h1><p>此章节仅讲解 hexo 如何设置主题，更多详细请移步: <a href="/dev-tools/hexo/How-To-Config/" title="《如何美化 hexo+next 个人博客？(入门篇2)》">《如何美化 hexo+next 个人博客？(入门篇2)》</a></p>
<h2 id="主题切换"><a href="#主题切换" class="headerlink" title="主题切换"></a>主题切换</h2><p>Hexo官方推荐或Github上搜索，都要很多主题。</p>
<blockquote>
<ol>
<li><a href="https://hexo.io/themes" target="_blank" rel="noopener">https://hexo.io/themes</a></li>
</ol>
</blockquote>
<p>☞ <strong>切换主题步骤：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#********** 1，进入&lt;your_blogs&gt;/thems目录</span></span><br><span class="line">$ <span class="built_in">cd</span> themes</span><br><span class="line"></span><br><span class="line"><span class="comment">#********** 2，下载主题（例如：https://github.com/theme-next/hexo-theme-next.git）</span></span><br><span class="line">$ git <span class="built_in">clone</span> &lt;git_theme_repo_url&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">#********** 3, 配置&lt;your_blogs&gt;/_config.yml</span></span><br><span class="line">    <span class="comment"># vim _config.yml</span></span><br><span class="line">    <span class="comment"># Extensions</span></span><br><span class="line">    <span class="comment">## Plugins: https://hexo.io/plugins/</span></span><br><span class="line">    <span class="comment">## Themes: https://hexo.io/themes/</span></span><br><span class="line">    theme: hexo-theme-next <span class="comment">#landscape</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#********** 4, 重启server（本地预览或部署Github）</span></span><br><span class="line">$ hexo clean &amp;&amp; hexo g &amp;&amp; hexo s    <span class="comment">#更新并本地预览服务</span></span><br><span class="line">$ hexo cleann &amp;&amp; hexo d -g          <span class="comment">#更新并部署发布</span></span><br></pre></td></tr></table></figure>

<h2 id="布局切换"><a href="#布局切换" class="headerlink" title="布局切换"></a>布局切换</h2><h1 id="Hexo搭建遇到问题（仅入门常见的几个）"><a href="#Hexo搭建遇到问题（仅入门常见的几个）" class="headerlink" title="Hexo搭建遇到问题（仅入门常见的几个）"></a>Hexo搭建遇到问题（仅入门常见的几个）</h1><p>此章节仅讲解 hexo 入门搭建中遇到的几个报错与解决，更多异常与处理请移步: <a href="/dev-tools/hexo/Hexo-Issues/" title="《常见的 Hexo 报错与解决》">《常见的 Hexo 报错与解决》</a></p>
<ol>
<li><p>若出现 <code>error deployer not found:git 或者 error deployer not found:github</code> 的错误。</p>
<blockquote>
<p><strong>解决办法</strong>：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="variable">$npm</span> install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>
</blockquote>
</li>
<li><p>若出现类似 <code>FATAL can not read a block mapping entry; a multiline key may not be an implicit key at line 70, column 1: ...</code> 错误。</p>
<blockquote>
<p><strong>解决办法</strong>：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">_config.yml中配置项的冒号后面要用空格隔开，再跟配置内容。</span><br><span class="line"><span class="comment">#例如：</span></span><br><span class="line"><span class="comment">#deploy:</span></span><br><span class="line"><span class="comment">#  type: git</span></span><br><span class="line"><span class="comment">#  repo: https://github.com/用户名/用户名.github.io.git</span></span><br><span class="line"><span class="comment">#  branch: master</span></span><br></pre></td></tr></table></figure>
</blockquote>
</li>
<li><p>中文乱码问题。</p>
<blockquote>
<p><strong>解决办法</strong>：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">将文件的内容编码改为UTF8格式</span><br></pre></td></tr></table></figure>
</blockquote>
</li>
<li><p><code>hexo sever</code>能够成功运行，但是 <code>localhost:4000</code> 无法访问。</p>
<blockquote>
<p><strong>解决办法</strong>：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo s -p 5000 <span class="comment">#改用其他端口5000启动</span></span><br></pre></td></tr></table></figure>
</blockquote>
</li>
<li><p><code>hexo d</code> 和 <code>hexo -v</code> 若出现如下稀奇古怪错误，已确保所有配置都正确，但还是会报错：</p>
 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># hexo -v 提示错误：</span></span><br><span class="line">(node:13857) Warning: Accessing non-existent property <span class="string">'lineno'</span> of module exports inside circular dependency</span><br><span class="line">(Use `node --trace-warnings ...` to show <span class="built_in">where</span> the warning was created)</span><br><span class="line">(node:13857) Warning: Accessing non-existent property <span class="string">'column'</span> of module exports inside circular dependency</span><br><span class="line">(node:13857) Warning: Accessing non-existent property <span class="string">'filename'</span> of module exports inside circular dependency</span><br><span class="line">(node:13857) Warning: Accessing non-existent property <span class="string">'lineno'</span> of module exports inside circular dependency</span><br><span class="line">(node:13857) Warning: Accessing non-existent property <span class="string">'column'</span> of module exports inside circular dependency</span><br><span class="line">(node:13857) Warning: Accessing non-existent property <span class="string">'filename'</span> of module exports inside circular dependency</span><br><span class="line">hexo: 4.2.0</span><br><span class="line">hexo-cli: 3.1.0</span><br><span class="line">os: Darwin 19.4.0 darwin x64</span><br><span class="line">node: 14.2.0 <span class="comment">#------》注意这一行！！！</span></span><br><span class="line">v8: 8.1.307.31-node.32</span><br><span class="line">uv: 1.37.0</span><br><span class="line">zlib: 1.2.11</span><br><span class="line">brotli: 1.0.7</span><br><span class="line">ares: 1.16.0</span><br><span class="line">modules: 83</span><br><span class="line">nghttp2: 1.40.0</span><br><span class="line">napi: 6</span><br><span class="line">llhttp: 2.0.4</span><br><span class="line">openssl: 1.1.1g</span><br><span class="line">cldr: 36.1</span><br><span class="line">icu: 66.1</span><br><span class="line">tz: 2019c</span><br><span class="line">unicode: 13.0</span><br><span class="line"></span><br><span class="line"><span class="comment"># hexo d 提示错误：</span></span><br><span class="line">(node:13872) Warning: Accessing non-existent property <span class="string">'lineno'</span> of module exports inside circular dependency</span><br><span class="line">(Use `node --trace-warnings ...` to show <span class="built_in">where</span> the warning was created)</span><br><span class="line">(node:13872) Warning: Accessing non-existent property <span class="string">'column'</span> of module exports inside circular dependency</span><br><span class="line">(node:13872) Warning: Accessing non-existent property <span class="string">'filename'</span> of module exports inside circular dependency</span><br><span class="line">(node:13872) Warning: Accessing non-existent property <span class="string">'lineno'</span> of module exports inside circular dependency</span><br><span class="line">(node:13872) Warning: Accessing non-existent property <span class="string">'column'</span> of module exports inside circular dependency</span><br><span class="line">(node:13872) Warning: Accessing non-existent property <span class="string">'filename'</span> of module exports inside circular dependency</span><br><span class="line">INFO  Start processing</span><br><span class="line">INFO  Files loaded <span class="keyword">in</span> 125 ms</span><br><span class="line">INFO  0 files generated <span class="keyword">in</span> 42 ms</span><br><span class="line">INFO  Deploying: git</span><br><span class="line">INFO  Clearing .deploy_git folder...</span><br><span class="line">INFO  Copying files from public folder...</span><br><span class="line">FATAL Something<span class="string">'s wrong. Maybe you can find the solution here: https://hexo.io/docs/troubleshooting.html</span></span><br><span class="line"><span class="string">TypeError [ERR_INVALID_ARG_TYPE]: The "mode" argument must be integer. Received an instance of Object</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p><strong>解决办法：</strong></p>
<ul>
<li><strong>原因</strong>：一般由于 hexo 不能使用最新版本的 node 版本（如，我的版本比较高 14.2.0） ，安装或切换为某个低的稳定版本即可（如，我切换成 v12.22.4 就正常了）。</li>
<li><strong>解决</strong>：  <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo n stable   <span class="comment">#n下载最新稳定版本。若需要切换回指定版本，则使用 sudo n 14.2.0(即版本号)</span></span><br><span class="line">$ hexo v|version  <span class="comment">#查看版本，正常了。</span></span><br><span class="line">$ hexo d|deploy   <span class="comment">#重新发布，正常了。</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
</blockquote>
</li>
</ol>
]]></content>
      <categories>
        <category>技术篇</category>
        <category>工具指南</category>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>环境</tag>
      </tags>
  </entry>
</search>
